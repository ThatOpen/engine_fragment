// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

export class GeometrySample {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):GeometrySample {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

id():number {
  return this.bb!.readUint32(this.bb_pos);
}

mutate_id(value:number):boolean {
  this.bb!.writeUint32(this.bb_pos + 0, value);
  return true;
}

transform():number {
  return this.bb!.readUint32(this.bb_pos + 4);
}

mutate_transform(value:number):boolean {
  this.bb!.writeUint32(this.bb_pos + 4, value);
  return true;
}

static sizeOf():number {
  return 8;
}

static createGeometrySample(builder:flatbuffers.Builder, id: number, transform: number):flatbuffers.Offset {
  builder.prep(4, 8);
  builder.writeInt32(transform);
  builder.writeInt32(id);
  return builder.offset();
}

}
