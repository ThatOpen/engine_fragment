import{C as k,W as L,S as v,a as R,b as S,G as x,cN as C,cF as G,V as b,cG as M,cO as E,cP as I,cI as _,cL as B}from"./virtual-memory-controller-CWnYvOUm.js";import{a as F,R as f,m as h}from"./index-CWj6LyOo.js";import{S as P}from"./stats.min-Cj8wREqt.js";import{F as A}from"./index-gTtqA1ko.js";const r=new k,U=r.get(L),t=U.create();t.scene=new v(r);t.scene.setup();t.scene.three.background=null;const p=document.getElementById("container");t.renderer=new R(r,p);t.camera=new S(r);t.camera.controls.setLookAt(58,22,-25,13,0,4.2);r.init();const V=r.get(x);V.create(t);const j="https://thatopen.github.io/engine_fragment/resources/worker.mjs",i=new A(j);t.camera.controls.addEventListener("rest",()=>i.update(!0));i.models.list.onItemSet.add(({value:e})=>{e.useCamera(t.camera.three),t.scene.three.add(e.object),i.update(!0)});const W=await fetch("https://thatopen.github.io/engine_fragment/resources/frags/school_arq.frag"),X=await W.arrayBuffer(),Y=await i.load(X,{modelId:"example"}),q=async e=>{const n=[];for(const[s,g]of i.models.list){const u=await g.raycast(e);u&&n.push(u)}if(await Promise.all(n),n.length===0)return null;let o=n[0],l=o.distance;for(let s=1;s<n.length;s++)n[s].distance<l&&(l=n[s].distance,o=n[s]);return o},a=new C;let w=e=>{};p.addEventListener("pointermove",async e=>{a.x=e.clientX,a.y=e.clientY;const n=await q({camera:t.camera.three,mouse:a,dom:t.renderer.three.domElement});w(n)});const z=new G().setFromPoints([new b(0,0,0),new b(0,0,2)]),D=new M({color:"#6528d7"}),m=new E(z,D);t.scene.three.add(m);w=e=>{if(m.visible=!!e,!e)return;console.log(e);const{point:n,normal:o}=e;if(!o)return;m.position.copy(n);const l=n.clone().add(o);m.lookAt(l)};let y=e=>{};p.addEventListener("click",async e=>{a.x=e.clientX,a.y=e.clientY;const n=await Y.raycast({camera:t.camera.three,mouse:a,dom:t.renderer.three.domElement});y(n)});const H=new I(.4),N=new _({color:"#bcf124",transparent:!0,opacity:.8});y=e=>{if(!e)return;const{point:n}=e,o=new B(H,N);o.position.copy(n),t.scene.three.add(o)};F.init();const d=f.create(()=>h`
    <bim-panel id="controls-panel" active label="Raycasting" class="options-menu">
      <bim-panel-section fixed label="Info">
        <bim-label style="white-space: normal;">ðŸ’¡ To better experience this tutorial, open your browser console to see the data logs.</bim-label>
      </bim-panel-section>
    </bim-panel>
  `);document.body.append(d);const O=f.create(()=>h`
    <bim-button class="phone-menu-toggler" icon="solar:settings-bold"
      @click=${()=>{d.classList.contains("options-menu-visible")?d.classList.remove("options-menu-visible"):d.classList.add("options-menu-visible")}}>
    </bim-button>
  `);document.body.append(O);const c=new P;c.showPanel(2);document.body.append(c.dom);c.dom.style.left="0px";c.dom.style.zIndex="unset";t.renderer.onBeforeUpdate.add(()=>c.begin());t.renderer.onAfterUpdate.add(()=>c.end());
