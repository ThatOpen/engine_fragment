var He=Object.defineProperty;var ze=(f,t,e)=>t in f?He(f,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):f[t]=e;var E=(f,t,e)=>(ze(f,typeof t!="symbol"?t+"":t,e),e);import{S as Wt,a as ne,F as Qt,b as Lt,I as ae,L as pe,c as We,d as Ce,e as ce,O as Xe,V as K,f as je,P as $e,g as Fe,M as Ee,h as ue,i as _e,T as qe,Q as ke,j as Pe,k as he,l as le,m as Ke,n as Qe,o as Je,p as Ze,q as ts,r as es,s as ss,t as is,u as os,v as rs,w as Is,x as ns,y as Es,z as as,A as Cs,B as cs,C as Ts,D as Rs,E as Fs,G as hs,H as ls,J as As,K as Os,N as fs,R as Ns,U as bs,W as ds,X as Ss,Y as Ls,Z as ps,_ as us,$ as _s,a0 as Ps,a1 as ms,a2 as Us,a3 as Ms,a4 as Ds,a5 as gs,a6 as Vs,a7 as ys,a8 as Gs,a9 as Ys,aa as ws,ab as xs,ac as Bs,ad as vs,ae as Hs,af as zs,ag as Ws,ah as Xs,ai as js,aj as $s,ak as qs,al as ks,am as Ks,an as Qs,ao as Js,ap as Zs,aq as ti,ar as ei,as as si,at as ii,au as oi,av as ri,aw as Ii,ax as ni,ay as Ei,az as ai,aA as Ci,aB as ci,aC as Ti,aD as Ri,aE as Fi,aF as hi,aG as li,aH as Ai,aI as Oi,aJ as fi,aK as Ni,aL as bi,aM as di,aN as Si,aO as Li,aP as pi,aQ as ui,aR as _i,aS as Pi,aT as mi,aU as Ui,aV as Mi,aW as Di,aX as gi,aY as Vi,aZ as yi,a_ as Gi,a$ as Yi,b0 as wi,b1 as xi,b2 as Bi,b3 as vi,b4 as Hi,b5 as zi,b6 as Wi,b7 as Xi,b8 as ji,b9 as $i,ba as qi,bb as ki,bc as Ki,bd as Qi,be as Ji,bf as Zi,bg as to,bh as eo,bi as so,bj as io,bk as oo,bl as ro,bm as Io,bn as no,bo as Eo,bp as ao,bq as Co,br as co,bs as To,bt as Ro,bu as Fo,bv as ho,bw as lo,bx as Ao,by as Oo,bz as fo,bA as No,bB as bo,bC as So,bD as Lo,bE as po,bF as uo,bG as _o,bH as Po,bI as mo,bJ as Uo,bK as Mo,bL as Do,bM as go,bN as Vo,bO as yo,bP as Go,bQ as Yo,bR as wo,bS as xo,bT as Bo,bU as vo,bV as Ho,bW as zo,bX as Wo,bY as Xo,bZ as jo,b_ as $o,b$ as qo,c0 as ko,c1 as Ko,c2 as Qo,c3 as Jo,c4 as Zo,c5 as tr,c6 as er,c7 as sr,c8 as ir,c9 as or,ca as me,cb as te,cc as rr}from"./pako.esm-TbDA1OGb.js";import{E as mt,F as Te,T as ut,B as Ir,C as Ut,S as Mt,G as Jt,A as Ae,a as Oe,b as fe,c as Ne,d as be,e as de,f as Tt,g as nr,W as Er,h as ar}from"./index-DUcvzWcL.js";import{B as Se}from"./byte-buffer-BEl4AvDu.js";import{R as Cr}from"./rendered-faces-DtNZp-Dg.js";const Xt={950732822:"IFCURIREFERENCE",4075327185:"IFCTIME",1209108979:"IFCTEMPERATURERATEOFCHANGEMEASURE",3457685358:"IFCSOUNDPRESSURELEVELMEASURE",4157543285:"IFCSOUNDPOWERLEVELMEASURE",2798247006:"IFCPROPERTYSETDEFINITIONSET",1790229001:"IFCPOSITIVEINTEGER",525895558:"IFCNONNEGATIVELENGTHMEASURE",1774176899:"IFCLINEINDEX",1275358634:"IFCLANGUAGEID",2541165894:"IFCDURATION",3701338814:"IFCDAYINWEEKNUMBER",2195413836:"IFCDATETIME",937566702:"IFCDATE",1683019596:"IFCCARDINALPOINTREFERENCE",2314439260:"IFCBINARY",1500781891:"IFCAREADENSITYMEASURE",3683503648:"IFCARCINDEX",4065007721:"IFCYEARNUMBER",1718600412:"IFCWARPINGMOMENTMEASURE",51269191:"IFCWARPINGCONSTANTMEASURE",2593997549:"IFCVOLUMETRICFLOWRATEMEASURE",3458127941:"IFCVOLUMEMEASURE",3345633955:"IFCVAPORPERMEABILITYMEASURE",1278329552:"IFCTORQUEMEASURE",2591213694:"IFCTIMESTAMP",2726807636:"IFCTIMEMEASURE",743184107:"IFCTHERMODYNAMICTEMPERATUREMEASURE",2016195849:"IFCTHERMALTRANSMITTANCEMEASURE",857959152:"IFCTHERMALRESISTANCEMEASURE",2281867870:"IFCTHERMALEXPANSIONCOEFFICIENTMEASURE",2645777649:"IFCTHERMALCONDUCTIVITYMEASURE",232962298:"IFCTHERMALADMITTANCEMEASURE",296282323:"IFCTEXTTRANSFORMATION",603696268:"IFCTEXTFONTNAME",3490877962:"IFCTEXTDECORATION",1460886941:"IFCTEXTALIGNMENT",2801250643:"IFCTEXT",58845555:"IFCTEMPERATUREGRADIENTMEASURE",361837227:"IFCSPECULARROUGHNESS",2757832317:"IFCSPECULAREXPONENT",3477203348:"IFCSPECIFICHEATCAPACITYMEASURE",993287707:"IFCSOUNDPRESSUREMEASURE",846465480:"IFCSOUNDPOWERMEASURE",3471399674:"IFCSOLIDANGLEMEASURE",408310005:"IFCSHEARMODULUSMEASURE",2190458107:"IFCSECTIONALAREAINTEGRALMEASURE",3467162246:"IFCSECTIONMODULUSMEASURE",2766185779:"IFCSECONDINMINUTE",3211557302:"IFCROTATIONALSTIFFNESSMEASURE",1755127002:"IFCROTATIONALMASSMEASURE",2133746277:"IFCROTATIONALFREQUENCYMEASURE",200335297:"IFCREAL",96294661:"IFCRATIOMEASURE",3972513137:"IFCRADIOACTIVITYMEASURE",3665567075:"IFCPRESSUREMEASURE",2169031380:"IFCPRESENTABLETEXT",1364037233:"IFCPOWERMEASURE",1245737093:"IFCPOSITIVERATIOMEASURE",3054510233:"IFCPOSITIVEPLANEANGLEMEASURE",2815919920:"IFCPOSITIVELENGTHMEASURE",4042175685:"IFCPLANEANGLEMEASURE",2642773653:"IFCPLANARFORCEMEASURE",2260317790:"IFCPARAMETERVALUE",929793134:"IFCPHMEASURE",2395907400:"IFCNUMERICMEASURE",2095195183:"IFCNORMALISEDRATIOMEASURE",765770214:"IFCMONTHINYEARNUMBER",2615040989:"IFCMONETARYMEASURE",3114022597:"IFCMOMENTOFINERTIAMEASURE",1648970520:"IFCMOLECULARWEIGHTMEASURE",3177669450:"IFCMOISTUREDIFFUSIVITYMEASURE",1753493141:"IFCMODULUSOFSUBGRADEREACTIONMEASURE",1052454078:"IFCMODULUSOFROTATIONALSUBGRADEREACTIONMEASURE",2173214787:"IFCMODULUSOFLINEARSUBGRADEREACTIONMEASURE",3341486342:"IFCMODULUSOFELASTICITYMEASURE",102610177:"IFCMINUTEINHOUR",3531705166:"IFCMASSPERLENGTHMEASURE",3124614049:"IFCMASSMEASURE",4017473158:"IFCMASSFLOWRATEMEASURE",1477762836:"IFCMASSDENSITYMEASURE",2486716878:"IFCMAGNETICFLUXMEASURE",286949696:"IFCMAGNETICFLUXDENSITYMEASURE",151039812:"IFCLUMINOUSINTENSITYMEASURE",2755797622:"IFCLUMINOUSINTENSITYDISTRIBUTIONMEASURE",2095003142:"IFCLUMINOUSFLUXMEASURE",503418787:"IFCLOGICAL",3086160713:"IFCLINEARVELOCITYMEASURE",1307019551:"IFCLINEARSTIFFNESSMEASURE",2128979029:"IFCLINEARMOMENTMEASURE",191860431:"IFCLINEARFORCEMEASURE",1243674935:"IFCLENGTHMEASURE",3258342251:"IFCLABEL",2054016361:"IFCKINEMATICVISCOSITYMEASURE",3192672207:"IFCISOTHERMALMOISTURECAPACITYMEASURE",3686016028:"IFCIONCONCENTRATIONMEASURE",3809634241:"IFCINTEGERCOUNTRATEMEASURE",1939436016:"IFCINTEGER",2679005408:"IFCINDUCTANCEMEASURE",3358199106:"IFCILLUMINANCEMEASURE",983778844:"IFCIDENTIFIER",2589826445:"IFCHOURINDAY",1158859006:"IFCHEATINGVALUEMEASURE",3113092358:"IFCHEATFLUXDENSITYMEASURE",3064340077:"IFCGLOBALLYUNIQUEID",3044325142:"IFCFREQUENCYMEASURE",1361398929:"IFCFORCEMEASURE",2590844177:"IFCFONTWEIGHT",2715512545:"IFCFONTVARIANT",1102727119:"IFCFONTSTYLE",2078135608:"IFCENERGYMEASURE",2506197118:"IFCELECTRICVOLTAGEMEASURE",2951915441:"IFCELECTRICRESISTANCEMEASURE",3790457270:"IFCELECTRICCURRENTMEASURE",2093906313:"IFCELECTRICCONDUCTANCEMEASURE",3818826038:"IFCELECTRICCHARGEMEASURE",1827137117:"IFCELECTRICCAPACITANCEMEASURE",69416015:"IFCDYNAMICVISCOSITYMEASURE",524656162:"IFCDOSEEQUIVALENTMEASURE",4134073009:"IFCDIMENSIONCOUNT",1514641115:"IFCDESCRIPTIVEMEASURE",300323983:"IFCDAYLIGHTSAVINGHOUR",86635668:"IFCDAYINMONTHNUMBER",94842927:"IFCCURVATUREMEASURE",1778710042:"IFCCOUNTMEASURE",3238673880:"IFCCONTEXTDEPENDENTMEASURE",3812528620:"IFCCOMPOUNDPLANEANGLEMEASURE",2991860651:"IFCCOMPLEXNUMBER",1867003952:"IFCBOXALIGNMENT",2735952531:"IFCBOOLEAN",2650437152:"IFCAREAMEASURE",632304761:"IFCANGULARVELOCITYMEASURE",360377573:"IFCAMOUNTOFSUBSTANCEMEASURE",4182062534:"IFCACCELERATIONMEASURE",3699917729:"IFCABSORBEDDOSEMEASURE",1971632696:"IFCGEOSLICE",2680139844:"IFCGEOMODEL",24726584:"IFCELECTRICFLOWTREATMENTDEVICE",3693000487:"IFCDISTRIBUTIONBOARD",3460952963:"IFCCONVEYORSEGMENT",3999819293:"IFCCAISSONFOUNDATION",3314249567:"IFCBOREHOLE",4196446775:"IFCBEARING",325726236:"IFCALIGNMENT",3425753595:"IFCTRACKELEMENT",991950508:"IFCSIGNAL",3798194928:"IFCREINFORCEDSOIL",3290496277:"IFCRAIL",1383356374:"IFCPAVEMENT",2182337498:"IFCNAVIGATIONELEMENT",234836483:"IFCMOORINGDEVICE",2078563270:"IFCMOBILETELECOMMUNICATIONSAPPLIANCE",1638804497:"IFCLIQUIDTERMINAL",1154579445:"IFCLINEARPOSITIONINGELEMENT",2696325953:"IFCKERB",2713699986:"IFCGEOTECHNICALASSEMBLY",2142170206:"IFCELECTRICFLOWTREATMENTDEVICETYPE",3376911765:"IFCEARTHWORKSFILL",1077100507:"IFCEARTHWORKSELEMENT",3071239417:"IFCEARTHWORKSCUT",479945903:"IFCDISTRIBUTIONBOARDTYPE",3426335179:"IFCDEEPFOUNDATION",1502416096:"IFCCOURSE",2940368186:"IFCCONVEYORSEGMENTTYPE",3203706013:"IFCCAISSONFOUNDATIONTYPE",3862327254:"IFCBUILTSYSTEM",1876633798:"IFCBUILTELEMENT",963979645:"IFCBRIDGEPART",644574406:"IFCBRIDGE",3649138523:"IFCBEARINGTYPE",1662888072:"IFCALIGNMENTVERTICAL",317615605:"IFCALIGNMENTSEGMENT",1545765605:"IFCALIGNMENTHORIZONTAL",4266260250:"IFCALIGNMENTCANT",3956297820:"IFCVIBRATIONDAMPERTYPE",1530820697:"IFCVIBRATIONDAMPER",840318589:"IFCVEHICLE",1953115116:"IFCTRANSPORTATIONDEVICE",618700268:"IFCTRACKELEMENTTYPE",2281632017:"IFCTENDONCONDUITTYPE",3663046924:"IFCTENDONCONDUIT",42703149:"IFCSINESPIRAL",1894708472:"IFCSIGNALTYPE",3599934289:"IFCSIGNTYPE",33720170:"IFCSIGN",1027922057:"IFCSEVENTHORDERPOLYNOMIALSPIRAL",544395925:"IFCSEGMENTEDREFERENCECURVE",3649235739:"IFCSECONDORDERPOLYNOMIALSPIRAL",550521510:"IFCROADPART",146592293:"IFCROAD",3818125796:"IFCRELADHERESTOELEMENT",4021432810:"IFCREFERENT",1891881377:"IFCRAILWAYPART",3992365140:"IFCRAILWAY",1763565496:"IFCRAILTYPE",1946335990:"IFCPOSITIONINGELEMENT",514975943:"IFCPAVEMENTTYPE",506776471:"IFCNAVIGATIONELEMENTTYPE",710110818:"IFCMOORINGDEVICETYPE",1950438474:"IFCMOBILETELECOMMUNICATIONSAPPLIANCETYPE",976884017:"IFCMARINEPART",525669439:"IFCMARINEFACILITY",1770583370:"IFCLIQUIDTERMINALTYPE",2176059722:"IFCLINEARELEMENT",679976338:"IFCKERBTYPE",3948183225:"IFCIMPACTPROTECTIONDEVICETYPE",2568555532:"IFCIMPACTPROTECTIONDEVICE",2898700619:"IFCGRADIENTCURVE",1594536857:"IFCGEOTECHNICALSTRATUM",4230923436:"IFCGEOTECHNICALELEMENT",4228831410:"IFCFACILITYPARTCOMMON",1310830890:"IFCFACILITYPART",24185140:"IFCFACILITY",4234616927:"IFCDIRECTRIXDERIVEDREFERENCESWEPTAREASOLID",1306400036:"IFCDEEPFOUNDATIONTYPE",4189326743:"IFCCOURSETYPE",2000195564:"IFCCOSINESPIRAL",3497074424:"IFCCLOTHOID",1626504194:"IFCBUILTELEMENTTYPE",3651464721:"IFCVEHICLETYPE",1229763772:"IFCTRIANGULATEDIRREGULARNETWORK",3665877780:"IFCTRANSPORTATIONDEVICETYPE",782932809:"IFCTHIRDORDERPOLYNOMIALSPIRAL",2735484536:"IFCSPIRAL",1356537516:"IFCSECTIONEDSURFACE",1290935644:"IFCSECTIONEDSOLIDHORIZONTAL",1862484736:"IFCSECTIONEDSOLID",1441486842:"IFCRELPOSITIONS",1033248425:"IFCRELASSOCIATESPROFILEDEF",3381221214:"IFCPOLYNOMIALCURVE",2485787929:"IFCOFFSETCURVEBYDISTANCES",590820931:"IFCOFFSETCURVE",3465909080:"IFCINDEXEDPOLYGONALTEXTUREMAP",593015953:"IFCDIRECTRIXCURVESWEPTAREASOLID",4212018352:"IFCCURVESEGMENT",3425423356:"IFCAXIS2PLACEMENTLINEAR",823603102:"IFCSEGMENT",2165702409:"IFCPOINTBYDISTANCEEXPRESSION",182550632:"IFCOPENCROSSPROFILEDEF",388784114:"IFCLINEARPLACEMENT",536804194:"IFCALIGNMENTHORIZONTALSEGMENT",3752311538:"IFCALIGNMENTCANTSEGMENT",1010789467:"IFCTEXTURECOORDINATEINDICESWITHVOIDS",222769930:"IFCTEXTURECOORDINATEINDICES",2691318326:"IFCQUANTITYNUMBER",3633395639:"IFCALIGNMENTVERTICALSEGMENT",2879124712:"IFCALIGNMENTPARAMETERSEGMENT",25142252:"IFCCONTROLLER",3087945054:"IFCALARM",4288193352:"IFCACTUATOR",630975310:"IFCUNITARYCONTROLELEMENT",4086658281:"IFCSENSOR",2295281155:"IFCPROTECTIVEDEVICETRIPPINGUNIT",182646315:"IFCFLOWINSTRUMENT",1426591983:"IFCFIRESUPPRESSIONTERMINAL",819412036:"IFCFILTER",3415622556:"IFCFAN",1003880860:"IFCELECTRICTIMECONTROL",402227799:"IFCELECTRICMOTOR",264262732:"IFCELECTRICGENERATOR",3310460725:"IFCELECTRICFLOWSTORAGEDEVICE",862014818:"IFCELECTRICDISTRIBUTIONBOARD",1904799276:"IFCELECTRICAPPLIANCE",1360408905:"IFCDUCTSILENCER",3518393246:"IFCDUCTSEGMENT",342316401:"IFCDUCTFITTING",562808652:"IFCDISTRIBUTIONCIRCUIT",4074379575:"IFCDAMPER",3640358203:"IFCCOOLINGTOWER",4136498852:"IFCCOOLEDBEAM",2272882330:"IFCCONDENSER",3571504051:"IFCCOMPRESSOR",3221913625:"IFCCOMMUNICATIONSAPPLIANCE",639361253:"IFCCOIL",3902619387:"IFCCHILLER",4217484030:"IFCCABLESEGMENT",1051757585:"IFCCABLEFITTING",3758799889:"IFCCABLECARRIERSEGMENT",635142910:"IFCCABLECARRIERFITTING",2938176219:"IFCBURNER",32344328:"IFCBOILER",2906023776:"IFCBEAMSTANDARDCASE",277319702:"IFCAUDIOVISUALAPPLIANCE",2056796094:"IFCAIRTOAIRHEATRECOVERY",177149247:"IFCAIRTERMINALBOX",1634111441:"IFCAIRTERMINAL",486154966:"IFCWINDOWSTANDARDCASE",4237592921:"IFCWASTETERMINAL",4156078855:"IFCWALLELEMENTEDCASE",4207607924:"IFCVALVE",4292641817:"IFCUNITARYEQUIPMENT",3179687236:"IFCUNITARYCONTROLELEMENTTYPE",3026737570:"IFCTUBEBUNDLE",3825984169:"IFCTRANSFORMER",812556717:"IFCTANK",1162798199:"IFCSWITCHINGDEVICE",385403989:"IFCSTRUCTURALLOADCASE",1404847402:"IFCSTACKTERMINAL",1999602285:"IFCSPACEHEATER",3420628829:"IFCSOLARDEVICE",3027962421:"IFCSLABSTANDARDCASE",3127900445:"IFCSLABELEMENTEDCASE",1329646415:"IFCSHADINGDEVICE",3053780830:"IFCSANITARYTERMINAL",2572171363:"IFCREINFORCINGBARTYPE",1232101972:"IFCRATIONALBSPLINECURVEWITHKNOTS",90941305:"IFCPUMP",655969474:"IFCPROTECTIVEDEVICETRIPPINGUNITTYPE",738039164:"IFCPROTECTIVEDEVICE",1156407060:"IFCPLATESTANDARDCASE",3612865200:"IFCPIPESEGMENT",310824031:"IFCPIPEFITTING",3694346114:"IFCOUTLET",144952367:"IFCOUTERBOUNDARYCURVE",2474470126:"IFCMOTORCONNECTION",1911478936:"IFCMEMBERSTANDARDCASE",1437502449:"IFCMEDICALDEVICE",629592764:"IFCLIGHTFIXTURE",76236018:"IFCLAMP",2176052936:"IFCJUNCTIONBOX",4175244083:"IFCINTERCEPTOR",2068733104:"IFCHUMIDIFIER",3319311131:"IFCHEATEXCHANGER",2188021234:"IFCFLOWMETER",1209101575:"IFCEXTERNALSPATIALELEMENT",484807127:"IFCEVAPORATOR",3747195512:"IFCEVAPORATIVECOOLER",2814081492:"IFCENGINE",2417008758:"IFCELECTRICDISTRIBUTIONBOARDTYPE",3242481149:"IFCDOORSTANDARDCASE",3205830791:"IFCDISTRIBUTIONSYSTEM",400855858:"IFCCOMMUNICATIONSAPPLIANCETYPE",905975707:"IFCCOLUMNSTANDARDCASE",1677625105:"IFCCIVILELEMENT",3296154744:"IFCCHIMNEY",2674252688:"IFCCABLEFITTINGTYPE",2188180465:"IFCBURNERTYPE",1177604601:"IFCBUILDINGSYSTEM",39481116:"IFCBUILDINGELEMENTPARTTYPE",1136057603:"IFCBOUNDARYCURVE",2461110595:"IFCBSPLINECURVEWITHKNOTS",1532957894:"IFCAUDIOVISUALAPPLIANCETYPE",4088093105:"IFCWORKCALENDAR",4009809668:"IFCWINDOWTYPE",926996030:"IFCVOIDINGFEATURE",2391383451:"IFCVIBRATIONISOLATOR",2415094496:"IFCTENDONTYPE",3081323446:"IFCTENDONANCHORTYPE",413509423:"IFCSYSTEMFURNITUREELEMENT",3101698114:"IFCSURFACEFEATURE",3657597509:"IFCSTRUCTURALSURFACEACTION",2757150158:"IFCSTRUCTURALCURVEREACTION",1004757350:"IFCSTRUCTURALCURVEACTION",338393293:"IFCSTAIRTYPE",1072016465:"IFCSOLARDEVICETYPE",4074543187:"IFCSHADINGDEVICETYPE",2157484638:"IFCSEAMCURVE",2781568857:"IFCROOFTYPE",2310774935:"IFCREINFORCINGMESHTYPE",964333572:"IFCREINFORCINGELEMENTTYPE",683857671:"IFCRATIONALBSPLINESURFACEWITHKNOTS",1469900589:"IFCRAMPTYPE",2839578677:"IFCPOLYGONALFACESET",1158309216:"IFCPILETYPE",3079942009:"IFCOPENINGSTANDARDCASE",1114901282:"IFCMEDICALDEVICETYPE",3113134337:"IFCINTERSECTIONCURVE",3946677679:"IFCINTERCEPTORTYPE",2571569899:"IFCINDEXEDPOLYCURVE",3493046030:"IFCGEOGRAPHICELEMENT",1509553395:"IFCFURNITURE",1893162501:"IFCFOOTINGTYPE",2853485674:"IFCEXTERNALSPATIALSTRUCTUREELEMENT",4148101412:"IFCEVENT",132023988:"IFCENGINETYPE",2397081782:"IFCELEMENTASSEMBLYTYPE",2323601079:"IFCDOORTYPE",1213902940:"IFCCYLINDRICALSURFACE",1525564444:"IFCCONSTRUCTIONPRODUCTRESOURCETYPE",4105962743:"IFCCONSTRUCTIONMATERIALRESOURCETYPE",2185764099:"IFCCONSTRUCTIONEQUIPMENTRESOURCETYPE",15328376:"IFCCOMPOSITECURVEONSURFACE",3875453745:"IFCCOMPLEXPROPERTYTEMPLATE",3893394355:"IFCCIVILELEMENTTYPE",2197970202:"IFCCHIMNEYTYPE",167062518:"IFCBSPLINESURFACEWITHKNOTS",2887950389:"IFCBSPLINESURFACE",2603310189:"IFCADVANCEDBREPWITHVOIDS",1635779807:"IFCADVANCEDBREP",2916149573:"IFCTRIANGULATEDFACESET",1935646853:"IFCTOROIDALSURFACE",2387106220:"IFCTESSELLATEDFACESET",3206491090:"IFCTASKTYPE",699246055:"IFCSURFACECURVE",4095615324:"IFCSUBCONTRACTRESOURCETYPE",603775116:"IFCSTRUCTURALSURFACEREACTION",4015995234:"IFCSPHERICALSURFACE",2481509218:"IFCSPATIALZONETYPE",463610769:"IFCSPATIALZONE",710998568:"IFCSPATIALELEMENTTYPE",1412071761:"IFCSPATIALELEMENT",3663146110:"IFCSIMPLEPROPERTYTEMPLATE",3243963512:"IFCREVOLVEDAREASOLIDTAPERED",816062949:"IFCREPARAMETRISEDCOMPOSITECURVESEGMENT",1521410863:"IFCRELSPACEBOUNDARY2NDLEVEL",3523091289:"IFCRELSPACEBOUNDARY1STLEVEL",427948657:"IFCRELINTERFERESELEMENTS",307848117:"IFCRELDEFINESBYTEMPLATE",1462361463:"IFCRELDEFINESBYOBJECT",2565941209:"IFCRELDECLARES",1027710054:"IFCRELASSIGNSTOGROUPBYFACTOR",3521284610:"IFCPROPERTYTEMPLATE",492091185:"IFCPROPERTYSETTEMPLATE",653396225:"IFCPROJECTLIBRARY",569719735:"IFCPROCEDURETYPE",3967405729:"IFCPREDEFINEDPROPERTYSET",1682466193:"IFCPCURVE",428585644:"IFCLABORRESOURCETYPE",2294589976:"IFCINDEXEDPOLYGONALFACEWITHVOIDS",178912537:"IFCINDEXEDPOLYGONALFACE",4095422895:"IFCGEOGRAPHICELEMENTTYPE",2652556860:"IFCFIXEDREFERENCESWEPTAREASOLID",2804161546:"IFCEXTRUDEDAREASOLIDTAPERED",4024345920:"IFCEVENTTYPE",2629017746:"IFCCURVEBOUNDEDSURFACE",1815067380:"IFCCREWRESOURCETYPE",3419103109:"IFCCONTEXT",2574617495:"IFCCONSTRUCTIONRESOURCETYPE",2059837836:"IFCCARTESIANPOINTLIST3D",1675464909:"IFCCARTESIANPOINTLIST2D",574549367:"IFCCARTESIANPOINTLIST",3406155212:"IFCADVANCEDFACE",3698973494:"IFCTYPERESOURCE",3736923433:"IFCTYPEPROCESS",901063453:"IFCTESSELLATEDITEM",1096409881:"IFCSWEPTDISKSOLIDPOLYGONAL",1042787934:"IFCRESOURCETIME",1608871552:"IFCRESOURCECONSTRAINTRELATIONSHIP",2943643501:"IFCRESOURCEAPPROVALRELATIONSHIP",2090586900:"IFCQUANTITYSET",1482703590:"IFCPROPERTYTEMPLATEDEFINITION",3778827333:"IFCPREDEFINEDPROPERTIES",2998442950:"IFCMIRROREDPROFILEDEF",853536259:"IFCMATERIALRELATIONSHIP",3404854881:"IFCMATERIALPROFILESETUSAGETAPERING",3079605661:"IFCMATERIALPROFILESETUSAGE",2852063980:"IFCMATERIALCONSTITUENTSET",3708119e3:"IFCMATERIALCONSTITUENT",1585845231:"IFCLAGTIME",2133299955:"IFCINDEXEDTRIANGLETEXTUREMAP",1437953363:"IFCINDEXEDTEXTUREMAP",3570813810:"IFCINDEXEDCOLOURMAP",1437805879:"IFCEXTERNALREFERENCERELATIONSHIP",297599258:"IFCEXTENDEDPROPERTIES",211053100:"IFCEVENTTIME",2713554722:"IFCCONVERSIONBASEDUNITWITHOFFSET",3285139300:"IFCCOLOURRGBLIST",1236880293:"IFCWORKTIME",1199560280:"IFCTIMEPERIOD",3611470254:"IFCTEXTUREVERTEXLIST",2771591690:"IFCTASKTIMERECURRING",1549132990:"IFCTASKTIME",2043862942:"IFCTABLECOLUMN",2934153892:"IFCSURFACEREINFORCEMENTAREA",609421318:"IFCSTRUCTURALLOADORRESULT",3478079324:"IFCSTRUCTURALLOADCONFIGURATION",1054537805:"IFCSCHEDULINGTIME",2439245199:"IFCRESOURCELEVELRELATIONSHIP",2433181523:"IFCREFERENCE",3915482550:"IFCRECURRENCEPATTERN",986844984:"IFCPROPERTYABSTRACTION",3843373140:"IFCPROJECTEDCRS",677532197:"IFCPRESENTATIONITEM",1507914824:"IFCMATERIALUSAGEDEFINITION",552965576:"IFCMATERIALPROFILEWITHOFFSETS",164193824:"IFCMATERIALPROFILESET",2235152071:"IFCMATERIALPROFILE",1847252529:"IFCMATERIALLAYERWITHOFFSETS",760658860:"IFCMATERIALDEFINITION",3057273783:"IFCMAPCONVERSION",4294318154:"IFCEXTERNALINFORMATION",1466758467:"IFCCOORDINATEREFERENCESYSTEM",1785450214:"IFCCOORDINATEOPERATION",775493141:"IFCCONNECTIONVOLUMEGEOMETRY",979691226:"IFCREINFORCINGBAR",3700593921:"IFCELECTRICDISTRIBUTIONPOINT",1062813311:"IFCDISTRIBUTIONCONTROLELEMENT",1052013943:"IFCDISTRIBUTIONCHAMBERELEMENT",578613899:"IFCCONTROLLERTYPE",2454782716:"IFCCHAMFEREDGEFEATURE",753842376:"IFCBEAM",3001207471:"IFCALARMTYPE",2874132201:"IFCACTUATORTYPE",3304561284:"IFCWINDOW",3512223829:"IFCWALLSTANDARDCASE",2391406946:"IFCWALL",3313531582:"IFCVIBRATIONISOLATORTYPE",2347447852:"IFCTENDONANCHOR",3824725483:"IFCTENDON",2515109513:"IFCSTRUCTURALANALYSISMODEL",4252922144:"IFCSTAIRFLIGHT",331165859:"IFCSTAIR",1529196076:"IFCSLAB",1783015770:"IFCSENSORTYPE",1376911519:"IFCROUNDEDEDGEFEATURE",2016517767:"IFCROOF",2320036040:"IFCREINFORCINGMESH",3027567501:"IFCREINFORCINGELEMENT",3055160366:"IFCRATIONALBEZIERCURVE",3283111854:"IFCRAMPFLIGHT",3024970846:"IFCRAMP",2262370178:"IFCRAILING",3171933400:"IFCPLATE",1687234759:"IFCPILE",1073191201:"IFCMEMBER",900683007:"IFCFOOTING",3508470533:"IFCFLOWTREATMENTDEVICE",2223149337:"IFCFLOWTERMINAL",707683696:"IFCFLOWSTORAGEDEVICE",987401354:"IFCFLOWSEGMENT",3132237377:"IFCFLOWMOVINGDEVICE",4037862832:"IFCFLOWINSTRUMENTTYPE",4278956645:"IFCFLOWFITTING",2058353004:"IFCFLOWCONTROLLER",4222183408:"IFCFIRESUPPRESSIONTERMINALTYPE",1810631287:"IFCFILTERTYPE",346874300:"IFCFANTYPE",1658829314:"IFCENERGYCONVERSIONDEVICE",857184966:"IFCELECTRICALELEMENT",1634875225:"IFCELECTRICALCIRCUIT",712377611:"IFCELECTRICTIMECONTROLTYPE",1217240411:"IFCELECTRICMOTORTYPE",1365060375:"IFCELECTRICHEATERTYPE",1534661035:"IFCELECTRICGENERATORTYPE",3277789161:"IFCELECTRICFLOWSTORAGEDEVICETYPE",663422040:"IFCELECTRICAPPLIANCETYPE",855621170:"IFCEDGEFEATURE",2030761528:"IFCDUCTSILENCERTYPE",3760055223:"IFCDUCTSEGMENTTYPE",869906466:"IFCDUCTFITTINGTYPE",395920057:"IFCDOOR",3041715199:"IFCDISTRIBUTIONPORT",3040386961:"IFCDISTRIBUTIONFLOWELEMENT",1945004755:"IFCDISTRIBUTIONELEMENT",2063403501:"IFCDISTRIBUTIONCONTROLELEMENTTYPE",1599208980:"IFCDISTRIBUTIONCHAMBERELEMENTTYPE",2635815018:"IFCDISCRETEACCESSORYTYPE",1335981549:"IFCDISCRETEACCESSORY",4147604152:"IFCDIAMETERDIMENSION",3961806047:"IFCDAMPERTYPE",3495092785:"IFCCURTAINWALL",1973544240:"IFCCOVERING",2954562838:"IFCCOOLINGTOWERTYPE",335055490:"IFCCOOLEDBEAMTYPE",488727124:"IFCCONSTRUCTIONPRODUCTRESOURCE",1060000209:"IFCCONSTRUCTIONMATERIALRESOURCE",3898045240:"IFCCONSTRUCTIONEQUIPMENTRESOURCE",1163958913:"IFCCONDITIONCRITERION",2188551683:"IFCCONDITION",2816379211:"IFCCONDENSERTYPE",3850581409:"IFCCOMPRESSORTYPE",843113511:"IFCCOLUMN",2301859152:"IFCCOILTYPE",2611217952:"IFCCIRCLE",2951183804:"IFCCHILLERTYPE",1285652485:"IFCCABLESEGMENTTYPE",3293546465:"IFCCABLECARRIERSEGMENTTYPE",395041908:"IFCCABLECARRIERFITTINGTYPE",1909888760:"IFCBUILDINGELEMENTPROXYTYPE",1095909175:"IFCBUILDINGELEMENTPROXY",2979338954:"IFCBUILDINGELEMENTPART",52481810:"IFCBUILDINGELEMENTCOMPONENT",3299480353:"IFCBUILDINGELEMENT",231477066:"IFCBOILERTYPE",1916977116:"IFCBEZIERCURVE",819618141:"IFCBEAMTYPE",1967976161:"IFCBSPLINECURVE",3460190687:"IFCASSET",2470393545:"IFCANGULARDIMENSION",1871374353:"IFCAIRTOAIRHEATRECOVERYTYPE",3352864051:"IFCAIRTERMINALTYPE",1411407467:"IFCAIRTERMINALBOXTYPE",3821786052:"IFCACTIONREQUEST",1213861670:"IFC2DCOMPOSITECURVE",1033361043:"IFCZONE",3342526732:"IFCWORKSCHEDULE",4218914973:"IFCWORKPLAN",1028945134:"IFCWORKCONTROL",1133259667:"IFCWASTETERMINALTYPE",1898987631:"IFCWALLTYPE",2769231204:"IFCVIRTUALELEMENT",728799441:"IFCVALVETYPE",1911125066:"IFCUNITARYEQUIPMENTTYPE",1600972822:"IFCTUBEBUNDLETYPE",3593883385:"IFCTRIMMEDCURVE",1620046519:"IFCTRANSPORTELEMENT",1692211062:"IFCTRANSFORMERTYPE",1637806684:"IFCTIMESERIESSCHEDULE",5716631:"IFCTANKTYPE",2254336722:"IFCSYSTEM",2315554128:"IFCSWITCHINGDEVICETYPE",148013059:"IFCSUBCONTRACTRESOURCE",1975003073:"IFCSTRUCTURALSURFACECONNECTION",2986769608:"IFCSTRUCTURALRESULTGROUP",1235345126:"IFCSTRUCTURALPOINTREACTION",734778138:"IFCSTRUCTURALPOINTCONNECTION",2082059205:"IFCSTRUCTURALPOINTACTION",3987759626:"IFCSTRUCTURALPLANARACTIONVARYING",1621171031:"IFCSTRUCTURALPLANARACTION",1252848954:"IFCSTRUCTURALLOADGROUP",1721250024:"IFCSTRUCTURALLINEARACTIONVARYING",1807405624:"IFCSTRUCTURALLINEARACTION",2445595289:"IFCSTRUCTURALCURVEMEMBERVARYING",214636428:"IFCSTRUCTURALCURVEMEMBER",4243806635:"IFCSTRUCTURALCURVECONNECTION",1179482911:"IFCSTRUCTURALCONNECTION",682877961:"IFCSTRUCTURALACTION",1039846685:"IFCSTAIRFLIGHTTYPE",3112655638:"IFCSTACKTERMINALTYPE",3812236995:"IFCSPACETYPE",652456506:"IFCSPACEPROGRAM",1305183839:"IFCSPACEHEATERTYPE",3856911033:"IFCSPACE",2533589738:"IFCSLABTYPE",4097777520:"IFCSITE",4105383287:"IFCSERVICELIFE",3517283431:"IFCSCHEDULETIMECONTROL",1768891740:"IFCSANITARYTERMINALTYPE",2863920197:"IFCRELASSIGNSTASKS",160246688:"IFCRELAGGREGATES",2324767716:"IFCRAMPFLIGHTTYPE",2893384427:"IFCRAILINGTYPE",3248260540:"IFCRADIUSDIMENSION",2250791053:"IFCPUMPTYPE",1842657554:"IFCPROTECTIVEDEVICETYPE",3651124850:"IFCPROJECTIONELEMENT",3642467123:"IFCPROJECTORDERRECORD",2904328755:"IFCPROJECTORDER",2744685151:"IFCPROCEDURE",3740093272:"IFCPORT",3724593414:"IFCPOLYLINE",4017108033:"IFCPLATETYPE",4231323485:"IFCPIPESEGMENTTYPE",804291784:"IFCPIPEFITTINGTYPE",3327091369:"IFCPERMIT",2382730787:"IFCPERFORMANCEHISTORY",2837617999:"IFCOUTLETTYPE",3425660407:"IFCORDERACTION",3588315303:"IFCOPENINGELEMENT",4143007308:"IFCOCCUPANT",1916936684:"IFCMOVE",977012517:"IFCMOTORCONNECTIONTYPE",3181161470:"IFCMEMBERTYPE",2108223431:"IFCMECHANICALFASTENERTYPE",377706215:"IFCMECHANICALFASTENER",2506943328:"IFCLINEARDIMENSION",1161773419:"IFCLIGHTFIXTURETYPE",1051575348:"IFCLAMPTYPE",3827777499:"IFCLABORRESOURCE",4288270099:"IFCJUNCTIONBOXTYPE",2391368822:"IFCINVENTORY",1806887404:"IFCHUMIDIFIERTYPE",1251058090:"IFCHEATEXCHANGERTYPE",2706460486:"IFCGROUP",3009204131:"IFCGRID",200128114:"IFCGASTERMINALTYPE",814719939:"IFCFURNITURESTANDARD",263784265:"IFCFURNISHINGELEMENT",3009222698:"IFCFLOWTREATMENTDEVICETYPE",2297155007:"IFCFLOWTERMINALTYPE",1339347760:"IFCFLOWSTORAGEDEVICETYPE",1834744321:"IFCFLOWSEGMENTTYPE",1482959167:"IFCFLOWMOVINGDEVICETYPE",3815607619:"IFCFLOWMETERTYPE",3198132628:"IFCFLOWFITTINGTYPE",3907093117:"IFCFLOWCONTROLLERTYPE",1287392070:"IFCFEATUREELEMENTSUBTRACTION",2143335405:"IFCFEATUREELEMENTADDITION",2827207264:"IFCFEATUREELEMENT",2489546625:"IFCFASTENERTYPE",647756555:"IFCFASTENER",3737207727:"IFCFACETEDBREPWITHVOIDS",807026263:"IFCFACETEDBREP",3390157468:"IFCEVAPORATORTYPE",3174744832:"IFCEVAPORATIVECOOLERTYPE",3272907226:"IFCEQUIPMENTSTANDARD",1962604670:"IFCEQUIPMENTELEMENT",2107101300:"IFCENERGYCONVERSIONDEVICETYPE",1704287377:"IFCELLIPSE",2590856083:"IFCELEMENTCOMPONENTTYPE",1623761950:"IFCELEMENTCOMPONENT",4123344466:"IFCELEMENTASSEMBLY",1758889154:"IFCELEMENT",360485395:"IFCELECTRICALBASEPROPERTIES",3849074793:"IFCDISTRIBUTIONFLOWELEMENTTYPE",3256556792:"IFCDISTRIBUTIONELEMENTTYPE",681481545:"IFCDIMENSIONCURVEDIRECTEDCALLOUT",1457835157:"IFCCURTAINWALLTYPE",3295246426:"IFCCREWRESOURCE",1916426348:"IFCCOVERINGTYPE",1419761937:"IFCCOSTSCHEDULE",3895139033:"IFCCOSTITEM",3293443760:"IFCCONTROL",2559216714:"IFCCONSTRUCTIONRESOURCE",2510884976:"IFCCONIC",3732776249:"IFCCOMPOSITECURVE",300633059:"IFCCOLUMNTYPE",2937912522:"IFCCIRCLEHOLLOWPROFILEDEF",3124254112:"IFCBUILDINGSTOREY",1950629157:"IFCBUILDINGELEMENTTYPE",4031249490:"IFCBUILDING",1260505505:"IFCBOUNDEDCURVE",3649129432:"IFCBOOLEANCLIPPINGRESULT",1334484129:"IFCBLOCK",3207858831:"IFCASYMMETRICISHAPEPROFILEDEF",1674181508:"IFCANNOTATION",2296667514:"IFCACTOR",2097647324:"IFCTRANSPORTELEMENTTYPE",3473067441:"IFCTASK",1580310250:"IFCSYSTEMFURNITUREELEMENTTYPE",4124788165:"IFCSURFACEOFREVOLUTION",2809605785:"IFCSURFACEOFLINEAREXTRUSION",2028607225:"IFCSURFACECURVESWEPTAREASOLID",4070609034:"IFCSTRUCTUREDDIMENSIONCALLOUT",2218152070:"IFCSTRUCTURALSURFACEMEMBERVARYING",3979015343:"IFCSTRUCTURALSURFACEMEMBER",3689010777:"IFCSTRUCTURALREACTION",530289379:"IFCSTRUCTURALMEMBER",3136571912:"IFCSTRUCTURALITEM",3544373492:"IFCSTRUCTURALACTIVITY",451544542:"IFCSPHERE",3893378262:"IFCSPATIALSTRUCTUREELEMENTTYPE",2706606064:"IFCSPATIALSTRUCTUREELEMENT",3626867408:"IFCRIGHTCIRCULARCYLINDER",4158566097:"IFCRIGHTCIRCULARCONE",1856042241:"IFCREVOLVEDAREASOLID",2914609552:"IFCRESOURCE",1401173127:"IFCRELVOIDSELEMENT",3451746338:"IFCRELSPACEBOUNDARY",366585022:"IFCRELSERVICESBUILDINGS",4122056220:"IFCRELSEQUENCE",1058617721:"IFCRELSCHEDULESCOSTITEMS",1245217292:"IFCRELREFERENCEDINSPATIALSTRUCTURE",750771296:"IFCRELPROJECTSELEMENT",202636808:"IFCRELOVERRIDESPROPERTIES",2051452291:"IFCRELOCCUPIESSPACES",3268803585:"IFCRELNESTS",4189434867:"IFCRELINTERACTIONREQUIREMENTS",279856033:"IFCRELFLOWCONTROLELEMENTS",3940055652:"IFCRELFILLSELEMENT",781010003:"IFCRELDEFINESBYTYPE",4186316022:"IFCRELDEFINESBYPROPERTIES",693640335:"IFCRELDEFINES",2551354335:"IFCRELDECOMPOSES",2802773753:"IFCRELCOVERSSPACES",886880790:"IFCRELCOVERSBLDGELEMENTS",3242617779:"IFCRELCONTAINEDINSPATIALSTRUCTURE",3678494232:"IFCRELCONNECTSWITHREALIZINGELEMENTS",504942748:"IFCRELCONNECTSWITHECCENTRICITY",1638771189:"IFCRELCONNECTSSTRUCTURALMEMBER",3912681535:"IFCRELCONNECTSSTRUCTURALELEMENT",2127690289:"IFCRELCONNECTSSTRUCTURALACTIVITY",3190031847:"IFCRELCONNECTSPORTS",4201705270:"IFCRELCONNECTSPORTTOELEMENT",3945020480:"IFCRELCONNECTSPATHELEMENTS",1204542856:"IFCRELCONNECTSELEMENTS",826625072:"IFCRELCONNECTS",2851387026:"IFCRELASSOCIATESPROFILEPROPERTIES",2655215786:"IFCRELASSOCIATESMATERIAL",3840914261:"IFCRELASSOCIATESLIBRARY",982818633:"IFCRELASSOCIATESDOCUMENT",2728634034:"IFCRELASSOCIATESCONSTRAINT",919958153:"IFCRELASSOCIATESCLASSIFICATION",4095574036:"IFCRELASSOCIATESAPPROVAL",1327628568:"IFCRELASSOCIATESAPPLIEDVALUE",1865459582:"IFCRELASSOCIATES",205026976:"IFCRELASSIGNSTORESOURCE",3372526763:"IFCRELASSIGNSTOPROJECTORDER",2857406711:"IFCRELASSIGNSTOPRODUCT",4278684876:"IFCRELASSIGNSTOPROCESS",1307041759:"IFCRELASSIGNSTOGROUP",2495723537:"IFCRELASSIGNSTOCONTROL",1683148259:"IFCRELASSIGNSTOACTOR",3939117080:"IFCRELASSIGNS",3454111270:"IFCRECTANGULARTRIMMEDSURFACE",2798486643:"IFCRECTANGULARPYRAMID",2770003689:"IFCRECTANGLEHOLLOWPROFILEDEF",3219374653:"IFCPROXY",1451395588:"IFCPROPERTYSET",4194566429:"IFCPROJECTIONCURVE",103090709:"IFCPROJECT",4208778838:"IFCPRODUCT",2945172077:"IFCPROCESS",220341763:"IFCPLANE",603570806:"IFCPLANARBOX",3566463478:"IFCPERMEABLECOVERINGPROPERTIES",3505215534:"IFCOFFSETCURVE3D",3388369263:"IFCOFFSETCURVE2D",3888040117:"IFCOBJECT",1425443689:"IFCMANIFOLDSOLIDBREP",1281925730:"IFCLINE",572779678:"IFCLSHAPEPROFILEDEF",1484403080:"IFCISHAPEPROFILEDEF",987898635:"IFCGEOMETRICCURVESET",1268542332:"IFCFURNITURETYPE",4238390223:"IFCFURNISHINGELEMENTTYPE",3455213021:"IFCFLUIDFLOWPROPERTIES",315944413:"IFCFILLAREASTYLETILES",4203026998:"IFCFILLAREASTYLETILESYMBOLWITHSTYLE",374418227:"IFCFILLAREASTYLEHATCHING",2047409740:"IFCFACEBASEDSURFACEMODEL",477187591:"IFCEXTRUDEDAREASOLID",80994333:"IFCENERGYPROPERTIES",2835456948:"IFCELLIPSEPROFILEDEF",2777663545:"IFCELEMENTARYSURFACE",339256511:"IFCELEMENTTYPE",1883228015:"IFCELEMENTQUANTITY",1472233963:"IFCEDGELOOP",4006246654:"IFCDRAUGHTINGPREDEFINEDCURVEFONT",445594917:"IFCDRAUGHTINGPREDEFINEDCOLOUR",3073041342:"IFCDRAUGHTINGCALLOUT",526551008:"IFCDOORSTYLE",1714330368:"IFCDOORPANELPROPERTIES",2963535650:"IFCDOORLININGPROPERTIES",32440307:"IFCDIRECTION",4054601972:"IFCDIMENSIONCURVETERMINATOR",606661476:"IFCDIMENSIONCURVE",693772133:"IFCDEFINEDSYMBOL",2827736869:"IFCCURVEBOUNDEDPLANE",2601014836:"IFCCURVE",2147822146:"IFCCSGSOLID",2506170314:"IFCCSGPRIMITIVE3D",194851669:"IFCCRANERAILFSHAPEPROFILEDEF",4133800736:"IFCCRANERAILASHAPEPROFILEDEF",2485617015:"IFCCOMPOSITECURVESEGMENT",2205249479:"IFCCLOSEDSHELL",1383045692:"IFCCIRCLEPROFILEDEF",1416205885:"IFCCARTESIANTRANSFORMATIONOPERATOR3DNONUNIFORM",3331915920:"IFCCARTESIANTRANSFORMATIONOPERATOR3D",3486308946:"IFCCARTESIANTRANSFORMATIONOPERATOR2DNONUNIFORM",3749851601:"IFCCARTESIANTRANSFORMATIONOPERATOR2D",59481748:"IFCCARTESIANTRANSFORMATIONOPERATOR",1123145078:"IFCCARTESIANPOINT",2898889636:"IFCCSHAPEPROFILEDEF",2713105998:"IFCBOXEDHALFSPACE",2581212453:"IFCBOUNDINGBOX",4182860854:"IFCBOUNDEDSURFACE",2736907675:"IFCBOOLEANRESULT",2740243338:"IFCAXIS2PLACEMENT3D",3125803723:"IFCAXIS2PLACEMENT2D",4261334040:"IFCAXIS1PLACEMENT",1302238472:"IFCANNOTATIONSURFACE",2265737646:"IFCANNOTATIONFILLAREAOCCURRENCE",669184980:"IFCANNOTATIONFILLAREA",3288037868:"IFCANNOTATIONCURVEOCCURRENCE",2543172580:"IFCZSHAPEPROFILEDEF",1299126871:"IFCWINDOWSTYLE",512836454:"IFCWINDOWPANELPROPERTIES",336235671:"IFCWINDOWLININGPROPERTIES",2759199220:"IFCVERTEXLOOP",1417489154:"IFCVECTOR",427810014:"IFCUSHAPEPROFILEDEF",2347495698:"IFCTYPEPRODUCT",1628702193:"IFCTYPEOBJECT",1345879162:"IFCTWODIRECTIONREPEATFACTOR",2715220739:"IFCTRAPEZIUMPROFILEDEF",3124975700:"IFCTEXTLITERALWITHEXTENT",4282788508:"IFCTEXTLITERAL",3028897424:"IFCTERMINATORSYMBOL",3071757647:"IFCTSHAPEPROFILEDEF",230924584:"IFCSWEPTSURFACE",1260650574:"IFCSWEPTDISKSOLID",2247615214:"IFCSWEPTAREASOLID",1878645084:"IFCSURFACESTYLERENDERING",2513912981:"IFCSURFACE",2233826070:"IFCSUBEDGE",3653947884:"IFCSTRUCTURALSTEELPROFILEPROPERTIES",3843319758:"IFCSTRUCTURALPROFILEPROPERTIES",1190533807:"IFCSTRUCTURALLOADSINGLEFORCEWARPING",1597423693:"IFCSTRUCTURALLOADSINGLEFORCE",1973038258:"IFCSTRUCTURALLOADSINGLEDISPLACEMENTDISTORTION",2473145415:"IFCSTRUCTURALLOADSINGLEDISPLACEMENT",2668620305:"IFCSTRUCTURALLOADPLANARFORCE",1595516126:"IFCSTRUCTURALLOADLINEARFORCE",390701378:"IFCSPACETHERMALLOADPROPERTIES",1202362311:"IFCSOUNDVALUE",2485662743:"IFCSOUNDPROPERTIES",723233188:"IFCSOLIDMODEL",2609359061:"IFCSLIPPAGECONNECTIONCONDITION",4124623270:"IFCSHELLBASEDSURFACEMODEL",2411513650:"IFCSERVICELIFEFACTOR",1509187699:"IFCSECTIONEDSPINE",2778083089:"IFCROUNDEDRECTANGLEPROFILEDEF",478536968:"IFCRELATIONSHIP",3765753017:"IFCREINFORCEMENTDEFINITIONPROPERTIES",3413951693:"IFCREGULARTIMESERIES",3615266464:"IFCRECTANGLEPROFILEDEF",110355661:"IFCPROPERTYTABLEVALUE",3650150729:"IFCPROPERTYSINGLEVALUE",3357820518:"IFCPROPERTYSETDEFINITION",941946838:"IFCPROPERTYREFERENCEVALUE",2752243245:"IFCPROPERTYLISTVALUE",4166981789:"IFCPROPERTYENUMERATEDVALUE",1680319473:"IFCPROPERTYDEFINITION",871118103:"IFCPROPERTYBOUNDEDVALUE",673634403:"IFCPRODUCTDEFINITIONSHAPE",179317114:"IFCPREDEFINEDPOINTMARKERSYMBOL",433424934:"IFCPREDEFINEDDIMENSIONSYMBOL",2559016684:"IFCPREDEFINEDCURVEFONT",759155922:"IFCPREDEFINEDCOLOUR",2775532180:"IFCPOLYGONALBOUNDEDHALFSPACE",2924175390:"IFCPOLYLOOP",1423911732:"IFCPOINTONSURFACE",4022376103:"IFCPOINTONCURVE",2067069095:"IFCPOINT",1663979128:"IFCPLANAREXTENT",2004835150:"IFCPLACEMENT",597895409:"IFCPIXELTEXTURE",3021840470:"IFCPHYSICALCOMPLEXQUANTITY",2519244187:"IFCPATH",2529465313:"IFCPARAMETERIZEDPROFILEDEF",1029017970:"IFCORIENTEDEDGE",2665983363:"IFCOPENSHELL",2833995503:"IFCONEDIRECTIONREPEATFACTOR",219451334:"IFCOBJECTDEFINITION",1430189142:"IFCMECHANICALCONCRETEMATERIALPROPERTIES",2022407955:"IFCMATERIALDEFINITIONREPRESENTATION",2347385850:"IFCMAPPEDITEM",1008929658:"IFCLOOP",2624227202:"IFCLOCALPLACEMENT",3422422726:"IFCLIGHTSOURCESPOT",1520743889:"IFCLIGHTSOURCEPOSITIONAL",4266656042:"IFCLIGHTSOURCEGONIOMETRIC",2604431987:"IFCLIGHTSOURCEDIRECTIONAL",125510826:"IFCLIGHTSOURCEAMBIENT",1402838566:"IFCLIGHTSOURCE",3741457305:"IFCIRREGULARTIMESERIES",3905492369:"IFCIMAGETEXTURE",2445078500:"IFCHYGROSCOPICMATERIALPROPERTIES",812098782:"IFCHALFSPACESOLID",178086475:"IFCGRIDPLACEMENT",3590301190:"IFCGEOMETRICSET",4142052618:"IFCGEOMETRICREPRESENTATIONSUBCONTEXT",2453401579:"IFCGEOMETRICREPRESENTATIONITEM",3448662350:"IFCGEOMETRICREPRESENTATIONCONTEXT",1446786286:"IFCGENERALPROFILEPROPERTIES",803998398:"IFCGENERALMATERIALPROPERTIES",3857492461:"IFCFUELPROPERTIES",738692330:"IFCFILLAREASTYLE",4219587988:"IFCFAILURECONNECTIONCONDITION",3008276851:"IFCFACESURFACE",803316827:"IFCFACEOUTERBOUND",1809719519:"IFCFACEBOUND",2556980723:"IFCFACE",1860660968:"IFCEXTENDEDMATERIALPROPERTIES",476780140:"IFCEDGECURVE",3900360178:"IFCEDGE",4170525392:"IFCDRAUGHTINGPREDEFINEDTEXTFONT",3732053477:"IFCDOCUMENTREFERENCE",1694125774:"IFCDIMENSIONPAIR",2273265877:"IFCDIMENSIONCALLOUTRELATIONSHIP",3632507154:"IFCDERIVEDPROFILEDEF",3800577675:"IFCCURVESTYLE",2889183280:"IFCCONVERSIONBASEDUNIT",3050246964:"IFCCONTEXTDEPENDENTUNIT",45288368:"IFCCONNECTIONPOINTECCENTRICITY",1981873012:"IFCCONNECTIONCURVEGEOMETRY",370225590:"IFCCONNECTEDFACESET",1485152156:"IFCCOMPOSITEPROFILEDEF",2542286263:"IFCCOMPLEXPROPERTY",776857604:"IFCCOLOURRGB",647927063:"IFCCLASSIFICATIONREFERENCE",3150382593:"IFCCENTERLINEPROFILEDEF",616511568:"IFCBLOBTEXTURE",2705031697:"IFCARBITRARYPROFILEDEFWITHVOIDS",1310608509:"IFCARBITRARYOPENPROFILEDEF",3798115385:"IFCARBITRARYCLOSEDPROFILEDEF",2297822566:"IFCANNOTATIONTEXTOCCURRENCE",3612888222:"IFCANNOTATIONSYMBOLOCCURRENCE",962685235:"IFCANNOTATIONSURFACEOCCURRENCE",2442683028:"IFCANNOTATIONOCCURRENCE",1065908215:"IFCWATERPROPERTIES",891718957:"IFCVIRTUALGRIDINTERSECTION",1907098498:"IFCVERTEXPOINT",3304826586:"IFCVERTEXBASEDTEXTUREMAP",2799835756:"IFCVERTEX",180925521:"IFCUNITASSIGNMENT",1735638870:"IFCTOPOLOGYREPRESENTATION",1377556343:"IFCTOPOLOGICALREPRESENTATIONITEM",581633288:"IFCTIMESERIESVALUE",1718945513:"IFCTIMESERIESREFERENCERELATIONSHIP",3101149627:"IFCTIMESERIES",3317419933:"IFCTHERMALMATERIALPROPERTIES",1210645708:"IFCTEXTUREVERTEX",2552916305:"IFCTEXTUREMAP",1742049831:"IFCTEXTURECOORDINATEGENERATOR",280115917:"IFCTEXTURECOORDINATE",1484833681:"IFCTEXTSTYLEWITHBOXCHARACTERISTICS",1640371178:"IFCTEXTSTYLETEXTMODEL",2636378356:"IFCTEXTSTYLEFORDEFINEDFONT",1983826977:"IFCTEXTSTYLEFONTMODEL",1447204868:"IFCTEXTSTYLE",912023232:"IFCTELECOMADDRESS",531007025:"IFCTABLEROW",985171141:"IFCTABLE",1290481447:"IFCSYMBOLSTYLE",626085974:"IFCSURFACETEXTURE",1351298697:"IFCSURFACESTYLEWITHTEXTURES",846575682:"IFCSURFACESTYLESHADING",1607154358:"IFCSURFACESTYLEREFRACTION",3303107099:"IFCSURFACESTYLELIGHTING",1300840506:"IFCSURFACESTYLE",3049322572:"IFCSTYLEDREPRESENTATION",3958052878:"IFCSTYLEDITEM",2830218821:"IFCSTYLEMODEL",3408363356:"IFCSTRUCTURALLOADTEMPERATURE",2525727697:"IFCSTRUCTURALLOADSTATIC",2162789131:"IFCSTRUCTURALLOAD",2273995522:"IFCSTRUCTURALCONNECTIONCONDITION",3692461612:"IFCSIMPLEPROPERTY",4240577450:"IFCSHAPEREPRESENTATION",3982875396:"IFCSHAPEMODEL",867548509:"IFCSHAPEASPECT",4165799628:"IFCSECTIONREINFORCEMENTPROPERTIES",2042790032:"IFCSECTIONPROPERTIES",448429030:"IFCSIUNIT",2341007311:"IFCROOT",3679540991:"IFCRIBPLATEPROFILEPROPERTIES",1660063152:"IFCREPRESENTATIONMAP",3008791417:"IFCREPRESENTATIONITEM",3377609919:"IFCREPRESENTATIONCONTEXT",1076942058:"IFCREPRESENTATION",1222501353:"IFCRELAXATION",1580146022:"IFCREINFORCEMENTBARPROPERTIES",2692823254:"IFCREFERENCESVALUEDOCUMENT",825690147:"IFCQUANTITYWEIGHT",2405470396:"IFCQUANTITYVOLUME",3252649465:"IFCQUANTITYTIME",931644368:"IFCQUANTITYLENGTH",2093928680:"IFCQUANTITYCOUNT",2044713172:"IFCQUANTITYAREA",3710013099:"IFCPROPERTYENUMERATION",148025276:"IFCPROPERTYDEPENDENCYRELATIONSHIP",3896028662:"IFCPROPERTYCONSTRAINTRELATIONSHIP",2598011224:"IFCPROPERTY",2802850158:"IFCPROFILEPROPERTIES",3958567839:"IFCPROFILEDEF",2267347899:"IFCPRODUCTSOFCOMBUSTIONPROPERTIES",2095639259:"IFCPRODUCTREPRESENTATION",2417041796:"IFCPRESENTATIONSTYLEASSIGNMENT",3119450353:"IFCPRESENTATIONSTYLE",1304840413:"IFCPRESENTATIONLAYERWITHSTYLE",2022622350:"IFCPRESENTATIONLAYERASSIGNMENT",1775413392:"IFCPREDEFINEDTEXTFONT",3213052703:"IFCPREDEFINEDTERMINATORSYMBOL",990879717:"IFCPREDEFINEDSYMBOL",3727388367:"IFCPREDEFINEDITEM",3355820592:"IFCPOSTALADDRESS",2226359599:"IFCPHYSICALSIMPLEQUANTITY",2483315170:"IFCPHYSICALQUANTITY",101040310:"IFCPERSONANDORGANIZATION",2077209135:"IFCPERSON",1207048766:"IFCOWNERHISTORY",1411181986:"IFCORGANIZATIONRELATIONSHIP",4251960020:"IFCORGANIZATION",1227763645:"IFCOPTICALMATERIALPROPERTIES",2251480897:"IFCOBJECTIVE",3701648758:"IFCOBJECTPLACEMENT",1918398963:"IFCNAMEDUNIT",2706619895:"IFCMONETARYUNIT",3368373690:"IFCMETRIC",677618848:"IFCMECHANICALSTEELMATERIALPROPERTIES",4256014907:"IFCMECHANICALMATERIALPROPERTIES",2597039031:"IFCMEASUREWITHUNIT",3265635763:"IFCMATERIALPROPERTIES",2199411900:"IFCMATERIALLIST",1303795690:"IFCMATERIALLAYERSETUSAGE",3303938423:"IFCMATERIALLAYERSET",248100487:"IFCMATERIALLAYER",1847130766:"IFCMATERIALCLASSIFICATIONRELATIONSHIP",1838606355:"IFCMATERIAL",30780891:"IFCLOCALTIME",1566485204:"IFCLIGHTINTENSITYDISTRIBUTION",4162380809:"IFCLIGHTDISTRIBUTIONDATA",3452421091:"IFCLIBRARYREFERENCE",2655187982:"IFCLIBRARYINFORMATION",3020489413:"IFCIRREGULARTIMESERIESVALUE",852622518:"IFCGRIDAXIS",3548104201:"IFCEXTERNALLYDEFINEDTEXTFONT",3207319532:"IFCEXTERNALLYDEFINEDSYMBOL",1040185647:"IFCEXTERNALLYDEFINEDSURFACESTYLE",2242383968:"IFCEXTERNALLYDEFINEDHATCHSTYLE",3200245327:"IFCEXTERNALREFERENCE",1648886627:"IFCENVIRONMENTALIMPACTVALUE",3796139169:"IFCDRAUGHTINGCALLOUTRELATIONSHIP",770865208:"IFCDOCUMENTINFORMATIONRELATIONSHIP",1154170062:"IFCDOCUMENTINFORMATION",1376555844:"IFCDOCUMENTELECTRONICFORMAT",2949456006:"IFCDIMENSIONALEXPONENTS",1045800335:"IFCDERIVEDUNITELEMENT",1765591967:"IFCDERIVEDUNIT",1072939445:"IFCDATEANDTIME",3510044353:"IFCCURVESTYLEFONTPATTERN",2367409068:"IFCCURVESTYLEFONTANDSCALING",1105321065:"IFCCURVESTYLEFONT",539742890:"IFCCURRENCYRELATIONSHIP",602808272:"IFCCOSTVALUE",1065062679:"IFCCOORDINATEDUNIVERSALTIMEOFFSET",347226245:"IFCCONSTRAINTRELATIONSHIP",613356794:"IFCCONSTRAINTCLASSIFICATIONRELATIONSHIP",1658513725:"IFCCONSTRAINTAGGREGATIONRELATIONSHIP",1959218052:"IFCCONSTRAINT",2732653382:"IFCCONNECTIONSURFACEGEOMETRY",4257277454:"IFCCONNECTIONPORTGEOMETRY",2614616156:"IFCCONNECTIONPOINTGEOMETRY",2859738748:"IFCCONNECTIONGEOMETRY",3264961684:"IFCCOLOURSPECIFICATION",3639012971:"IFCCLASSIFICATIONNOTATIONFACET",938368621:"IFCCLASSIFICATIONNOTATION",1098599126:"IFCCLASSIFICATIONITEMRELATIONSHIP",1767535486:"IFCCLASSIFICATIONITEM",747523909:"IFCCLASSIFICATION",622194075:"IFCCALENDARDATE",2069777674:"IFCBOUNDARYNODECONDITIONWARPING",1387855156:"IFCBOUNDARYNODECONDITION",3367102660:"IFCBOUNDARYFACECONDITION",1560379544:"IFCBOUNDARYEDGECONDITION",4037036970:"IFCBOUNDARYCONDITION",3869604511:"IFCAPPROVALRELATIONSHIP",390851274:"IFCAPPROVALPROPERTYRELATIONSHIP",2080292479:"IFCAPPROVALACTORRELATIONSHIP",130549933:"IFCAPPROVAL",1110488051:"IFCAPPLIEDVALUERELATIONSHIP",411424972:"IFCAPPLIEDVALUE",639542469:"IFCAPPLICATION",618182010:"IFCADDRESS",3630933823:"IFCACTORROLE",599546466:"FILE_DESCRIPTION",1390159747:"FILE_NAME",1109904537:"FILE_SCHEMA"};class Le extends Set{constructor(e){super(e);E(this,"onUpdated",new mt);E(this,"onItemAdded",new mt);E(this,"onBeforeDelete",new mt);E(this,"onItemDeleted",new mt);E(this,"onCleared",new mt);E(this,"guard",()=>!0)}set eventsEnabled(e){this.onUpdated.enabled=e,this.onItemAdded.enabled=e,this.onItemDeleted.enabled=e,this.onBeforeDelete.enabled=e,this.onCleared.enabled=e}clear(){for(const e of this)this.onBeforeDelete.trigger(e);super.clear(),this.onCleared.trigger(),this.onUpdated.trigger()}add(...e){for(const s of e)this.has(s)||!(this.guard??(()=>!0))(s)||(super.add(s),this.onItemAdded||(this.onItemAdded=new mt),this.onItemAdded.trigger(s));return this.onUpdated||(this.onUpdated=new mt),this.onUpdated.trigger(),this}delete(e){if(!this.has(e))return!1;this.onBeforeDelete.trigger(e);const i=super.delete(e);return i&&(this.onItemDeleted.trigger(),this.onUpdated.trigger()),i}deleteIf(e){for(const s of this)e(s)&&this.delete(s)}getIndex(e){let s=0;for(const i of this){if(i===e)return s;s++}return-1}dispose(){this.clear(),this.onItemAdded.reset(),this.onItemDeleted.reset(),this.onCleared.reset(),this.onBeforeDelete.reset(),this.onUpdated.reset()}}class Re{constructor(t){this.minalign=1,this.vtable=null,this.vtable_in_use=0,this.isNested=!1,this.object_start=0,this.vtables=[],this.vector_num_elems=0,this.force_defaults=!1,this.string_maps=null,this.text_encoder=new TextEncoder;let e;t?e=t:e=1024,this.bb=Se.allocate(e),this.space=e}clear(){this.bb.clear(),this.space=this.bb.capacity(),this.minalign=1,this.vtable=null,this.vtable_in_use=0,this.isNested=!1,this.object_start=0,this.vtables=[],this.vector_num_elems=0,this.force_defaults=!1,this.string_maps=null}forceDefaults(t){this.force_defaults=t}dataBuffer(){return this.bb}asUint8Array(){return this.bb.bytes().subarray(this.bb.position(),this.bb.position()+this.offset())}prep(t,e){t>this.minalign&&(this.minalign=t);const s=~(this.bb.capacity()-this.space+e)+1&t-1;for(;this.space<s+t+e;){const i=this.bb.capacity();this.bb=Re.growByteBuffer(this.bb),this.space+=this.bb.capacity()-i}this.pad(s)}pad(t){for(let e=0;e<t;e++)this.bb.writeInt8(--this.space,0)}writeInt8(t){this.bb.writeInt8(this.space-=1,t)}writeInt16(t){this.bb.writeInt16(this.space-=2,t)}writeInt32(t){this.bb.writeInt32(this.space-=4,t)}writeInt64(t){this.bb.writeInt64(this.space-=8,t)}writeFloat32(t){this.bb.writeFloat32(this.space-=4,t)}writeFloat64(t){this.bb.writeFloat64(this.space-=8,t)}addInt8(t){this.prep(1,0),this.writeInt8(t)}addInt16(t){this.prep(2,0),this.writeInt16(t)}addInt32(t){this.prep(4,0),this.writeInt32(t)}addInt64(t){this.prep(8,0),this.writeInt64(t)}addFloat32(t){this.prep(4,0),this.writeFloat32(t)}addFloat64(t){this.prep(8,0),this.writeFloat64(t)}addFieldInt8(t,e,s){(this.force_defaults||e!=s)&&(this.addInt8(e),this.slot(t))}addFieldInt16(t,e,s){(this.force_defaults||e!=s)&&(this.addInt16(e),this.slot(t))}addFieldInt32(t,e,s){(this.force_defaults||e!=s)&&(this.addInt32(e),this.slot(t))}addFieldInt64(t,e,s){(this.force_defaults||e!==s)&&(this.addInt64(e),this.slot(t))}addFieldFloat32(t,e,s){(this.force_defaults||e!=s)&&(this.addFloat32(e),this.slot(t))}addFieldFloat64(t,e,s){(this.force_defaults||e!=s)&&(this.addFloat64(e),this.slot(t))}addFieldOffset(t,e,s){(this.force_defaults||e!=s)&&(this.addOffset(e),this.slot(t))}addFieldStruct(t,e,s){e!=s&&(this.nested(e),this.slot(t))}nested(t){if(t!=this.offset())throw new TypeError("FlatBuffers: struct must be serialized inline.")}notNested(){if(this.isNested)throw new TypeError("FlatBuffers: object serialization must not be nested.")}slot(t){this.vtable!==null&&(this.vtable[t]=this.offset())}offset(){return this.bb.capacity()-this.space}static growByteBuffer(t){const e=t.capacity();if(e&3221225472)throw new Error("FlatBuffers: cannot grow buffer beyond 2 gigabytes.");const s=e<<1,i=Se.allocate(s);return i.setPosition(s-e),i.bytes().set(t.bytes(),s-e),i}addOffset(t){this.prep(Wt,0),this.writeInt32(this.offset()-t+Wt)}startObject(t){this.notNested(),this.vtable==null&&(this.vtable=[]),this.vtable_in_use=t;for(let e=0;e<t;e++)this.vtable[e]=0;this.isNested=!0,this.object_start=this.offset()}endObject(){if(this.vtable==null||!this.isNested)throw new Error("FlatBuffers: endObject called without startObject");this.addInt32(0);const t=this.offset();let e=this.vtable_in_use-1;for(;e>=0&&this.vtable[e]==0;e--);const s=e+1;for(;e>=0;e--)this.addInt16(this.vtable[e]!=0?t-this.vtable[e]:0);const i=2;this.addInt16(t-this.object_start);const o=(s+i)*ne;this.addInt16(o);let r=0;const n=this.space;t:for(e=0;e<this.vtables.length;e++){const I=this.bb.capacity()-this.vtables[e];if(o==this.bb.readInt16(I)){for(let a=ne;a<o;a+=ne)if(this.bb.readInt16(n+a)!=this.bb.readInt16(I+a))continue t;r=this.vtables[e];break}}return r?(this.space=this.bb.capacity()-t,this.bb.writeInt32(this.space,r-t)):(this.vtables.push(this.offset()),this.bb.writeInt32(this.bb.capacity()-t,this.offset()-t)),this.isNested=!1,t}finish(t,e,s){const i=s?Lt:0;if(e){const o=e;if(this.prep(this.minalign,Wt+Qt+i),o.length!=Qt)throw new TypeError("FlatBuffers: file identifier must be length "+Qt);for(let r=Qt-1;r>=0;r--)this.writeInt8(o.charCodeAt(r))}this.prep(this.minalign,Wt+i),this.addOffset(t),i&&this.addInt32(this.bb.capacity()-this.space),this.bb.setPosition(this.space)}finishSizePrefixed(t,e){this.finish(t,e,!0)}requiredField(t,e){const s=this.bb.capacity()-t,i=s-this.bb.readInt32(s);if(!(e<this.bb.readInt16(i)&&this.bb.readInt16(i+e)!=0))throw new TypeError("FlatBuffers: field "+e+" must be set")}startVector(t,e,s){this.notNested(),this.vector_num_elems=e,this.prep(Wt,t*e),this.prep(s,t*e)}endVector(){return this.writeInt32(this.vector_num_elems),this.offset()}createSharedString(t){if(!t)return 0;if(this.string_maps||(this.string_maps=new Map),this.string_maps.has(t))return this.string_maps.get(t);const e=this.createString(t);return this.string_maps.set(t,e),e}createString(t){if(t==null)return 0;let e;return t instanceof Uint8Array?e=t:e=this.text_encoder.encode(t),this.addInt8(0),this.startVector(1,e.length,1),this.bb.setPosition(this.space-=e.length),this.bb.bytes().set(e,this.space),this.endVector()}createByteVector(t){return t==null?0:(this.startVector(1,t.length,1),this.bb.setPosition(this.space-=t.length),this.bb.bytes().set(t,this.space),this.endVector())}createObjectOffset(t){return t===null?0:typeof t=="string"?this.createString(t):t.pack(this)}createObjectOffsetList(t){const e=[];for(let s=0;s<t.length;++s){const i=t[s];if(i!==null)e.push(this.createObjectOffset(i));else throw new TypeError("FlatBuffers: Argument for createObjectOffsetList cannot contain null.")}return e}createStructOffsetList(t,e){return e(this,t.length),this.createObjectOffsetList(t.slice().reverse()),this.endVector()}}class at{constructor(){E(this,"bb",null);E(this,"bb_pos",0)}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsAlignment(t,e){return(e||new at).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsAlignment(t,e){return t.setPosition(t.position()+Lt),(e||new at).__init(t.readInt32(t.position())+t.position(),t)}absolute(t){const e=this.bb.__offset(this.bb_pos,4);return e?this.bb.readUint32(this.bb.__vector(this.bb_pos+e)+t*4):0}absoluteLength(){const t=this.bb.__offset(this.bb_pos,4);return t?this.bb.__vector_len(this.bb_pos+t):0}absoluteArray(){const t=this.bb.__offset(this.bb_pos,4);return t?new Uint32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+t),this.bb.__vector_len(this.bb_pos+t)):null}horizontal(t){const e=this.bb.__offset(this.bb_pos,6);return e?this.bb.readUint32(this.bb.__vector(this.bb_pos+e)+t*4):0}horizontalLength(){const t=this.bb.__offset(this.bb_pos,6);return t?this.bb.__vector_len(this.bb_pos+t):0}horizontalArray(){const t=this.bb.__offset(this.bb_pos,6);return t?new Uint32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+t),this.bb.__vector_len(this.bb_pos+t)):null}vertical(t){const e=this.bb.__offset(this.bb_pos,8);return e?this.bb.readUint32(this.bb.__vector(this.bb_pos+e)+t*4):0}verticalLength(){const t=this.bb.__offset(this.bb_pos,8);return t?this.bb.__vector_len(this.bb_pos+t):0}verticalArray(){const t=this.bb.__offset(this.bb_pos,8);return t?new Uint32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+t),this.bb.__vector_len(this.bb_pos+t)):null}static startAlignment(t){t.startObject(3)}static addAbsolute(t,e){t.addFieldOffset(0,e,0)}static createAbsoluteVector(t,e){t.startVector(4,e.length,4);for(let s=e.length-1;s>=0;s--)t.addInt32(e[s]);return t.endVector()}static startAbsoluteVector(t,e){t.startVector(4,e,4)}static addHorizontal(t,e){t.addFieldOffset(1,e,0)}static createHorizontalVector(t,e){t.startVector(4,e.length,4);for(let s=e.length-1;s>=0;s--)t.addInt32(e[s]);return t.endVector()}static startHorizontalVector(t,e){t.startVector(4,e,4)}static addVertical(t,e){t.addFieldOffset(2,e,0)}static createVerticalVector(t,e){t.startVector(4,e.length,4);for(let s=e.length-1;s>=0;s--)t.addInt32(e[s]);return t.endVector()}static startVerticalVector(t,e){t.startVector(4,e,4)}static endAlignment(t){return t.endObject()}static createAlignment(t,e,s,i){return at.startAlignment(t),at.addAbsolute(t,e),at.addHorizontal(t,s),at.addVertical(t,i),at.endAlignment(t)}}class dt{constructor(){E(this,"bb",null);E(this,"bb_pos",0)}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsAttribute(t,e){return(e||new dt).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsAttribute(t,e){return t.setPosition(t.position()+Lt),(e||new dt).__init(t.readInt32(t.position())+t.position(),t)}data(t,e){const s=this.bb.__offset(this.bb_pos,4);return s?this.bb.__string(this.bb.__vector(this.bb_pos+s)+t*4,e):null}dataLength(){const t=this.bb.__offset(this.bb_pos,4);return t?this.bb.__vector_len(this.bb_pos+t):0}static startAttribute(t){t.startObject(1)}static addData(t,e){t.addFieldOffset(0,e,0)}static createDataVector(t,e){t.startVector(4,e.length,4);for(let s=e.length-1;s>=0;s--)t.addOffset(e[s]);return t.endVector()}static startDataVector(t,e){t.startVector(4,e,4)}static endAttribute(t){const e=t.endObject();return t.requiredField(e,4),e}static createAttribute(t,e){return dt.startAttribute(t),dt.addData(t,e),dt.endAttribute(t)}}class k{constructor(){E(this,"bb",null);E(this,"bb_pos",0)}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsGeometryLines(t,e){return(e||new k).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsGeometryLines(t,e){return t.setPosition(t.position()+Lt),(e||new k).__init(t.readInt32(t.position())+t.position(),t)}points(t){const e=this.bb.__offset(this.bb_pos,4);return e?this.bb.readFloat32(this.bb.__vector(this.bb_pos+e)+t*4):0}pointsLength(){const t=this.bb.__offset(this.bb_pos,4);return t?this.bb.__vector_len(this.bb_pos+t):0}pointsArray(){const t=this.bb.__offset(this.bb_pos,4);return t?new Float32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+t),this.bb.__vector_len(this.bb_pos+t)):null}static startGeometryLines(t){t.startObject(1)}static addPoints(t,e){t.addFieldOffset(0,e,0)}static createPointsVector(t,e){t.startVector(4,e.length,4);for(let s=e.length-1;s>=0;s--)t.addFloat32(e[s]);return t.endVector()}static startPointsVector(t,e){t.startVector(4,e,4)}static endGeometryLines(t){const e=t.endObject();return t.requiredField(e,4),e}static createGeometryLines(t,e){return k.startGeometryLines(t),k.addPoints(t,e),k.endGeometryLines(t)}}class ee{constructor(){E(this,"bb",null);E(this,"bb_pos",0)}__init(t,e){return this.bb_pos=t,this.bb=e,this}id(){return this.bb.readUint32(this.bb_pos)}mutate_id(t){return this.bb.writeUint32(this.bb_pos+0,t),!0}geometryClass(){return this.bb.readInt8(this.bb_pos+4)}mutate_geometry_class(t){return this.bb.writeInt8(this.bb_pos+4,t),!0}static sizeOf(){return 8}static createGeometryRepresentation(t,e,s){return t.prep(4,8),t.pad(3),t.writeInt8(s),t.writeInt32(e),t.offset()}}class se{constructor(){E(this,"bb",null);E(this,"bb_pos",0)}__init(t,e){return this.bb_pos=t,this.bb=e,this}id(){return this.bb.readUint32(this.bb_pos)}mutate_id(t){return this.bb.writeUint32(this.bb_pos+0,t),!0}transform(){return this.bb.readUint32(this.bb_pos+4)}mutate_transform(t){return this.bb.writeUint32(this.bb_pos+4,t),!0}static sizeOf(){return 8}static createGeometrySample(t,e,s){return t.prep(4,8),t.writeInt32(s),t.writeInt32(e),t.offset()}}class cr{constructor(){E(this,"bb",null);E(this,"bb_pos",0)}__init(t,e){return this.bb_pos=t,this.bb=e,this}start(t){return(t||new Te).__init(this.bb_pos,this.bb)}end(t){return(t||new Te).__init(this.bb_pos+12,this.bb)}height(){return this.bb.readFloat32(this.bb_pos+24)}mutate_height(t){return this.bb.writeFloat32(this.bb_pos+24,t),!0}width(){return this.bb.readFloat32(this.bb_pos+28)}mutate_width(t){return this.bb.writeFloat32(this.bb_pos+28,t),!0}offset(){return this.bb.readFloat32(this.bb_pos+32)}mutate_offset(t){return this.bb.writeFloat32(this.bb_pos+32,t),!0}static sizeOf(){return 36}static createGeometryWall(t,e,s,i,o,r,n,I,a,c){return t.prep(4,36),t.writeFloat32(c),t.writeFloat32(a),t.writeFloat32(I),t.prep(4,12),t.writeFloat32(n),t.writeFloat32(r),t.writeFloat32(o),t.prep(4,12),t.writeFloat32(i),t.writeFloat32(s),t.writeFloat32(e),t.offset()}}class U{constructor(){E(this,"bb",null);E(this,"bb_pos",0)}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsGeometries(t,e){return(e||new U).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsGeometries(t,e){return t.setPosition(t.position()+Lt),(e||new U).__init(t.readInt32(t.position())+t.position(),t)}samples(t,e){const s=this.bb.__offset(this.bb_pos,4);return s?(e||new se).__init(this.bb.__vector(this.bb_pos+s)+t*8,this.bb):null}samplesLength(){const t=this.bb.__offset(this.bb_pos,4);return t?this.bb.__vector_len(this.bb_pos+t):0}sampleIds(t){const e=this.bb.__offset(this.bb_pos,6);return e?this.bb.readUint32(this.bb.__vector(this.bb_pos+e)+t*4):0}sampleIdsLength(){const t=this.bb.__offset(this.bb_pos,6);return t?this.bb.__vector_len(this.bb_pos+t):0}sampleIdsArray(){const t=this.bb.__offset(this.bb_pos,6);return t?new Uint32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+t),this.bb.__vector_len(this.bb_pos+t)):null}representations(t,e){const s=this.bb.__offset(this.bb_pos,8);return s?(e||new ee).__init(this.bb.__vector(this.bb_pos+s)+t*8,this.bb):null}representationsLength(){const t=this.bb.__offset(this.bb_pos,8);return t?this.bb.__vector_len(this.bb_pos+t):0}representationIds(t){const e=this.bb.__offset(this.bb_pos,10);return e?this.bb.readUint32(this.bb.__vector(this.bb_pos+e)+t*4):0}representationIdsLength(){const t=this.bb.__offset(this.bb_pos,10);return t?this.bb.__vector_len(this.bb_pos+t):0}representationIdsArray(){const t=this.bb.__offset(this.bb_pos,10);return t?new Uint32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+t),this.bb.__vector_len(this.bb_pos+t)):null}transforms(t,e){const s=this.bb.__offset(this.bb_pos,12);return s?(e||new ut).__init(this.bb.__vector(this.bb_pos+s)+t*48,this.bb):null}transformsLength(){const t=this.bb.__offset(this.bb_pos,12);return t?this.bb.__vector_len(this.bb_pos+t):0}transformIds(t){const e=this.bb.__offset(this.bb_pos,14);return e?this.bb.readUint32(this.bb.__vector(this.bb_pos+e)+t*4):0}transformIdsLength(){const t=this.bb.__offset(this.bb_pos,14);return t?this.bb.__vector_len(this.bb_pos+t):0}transformIdsArray(){const t=this.bb.__offset(this.bb_pos,14);return t?new Uint32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+t),this.bb.__vector_len(this.bb_pos+t)):null}representationsSamples(t){const e=this.bb.__offset(this.bb_pos,16);return e?this.bb.readUint32(this.bb.__vector(this.bb_pos+e)+t*4):0}representationsSamplesLength(){const t=this.bb.__offset(this.bb_pos,16);return t?this.bb.__vector_len(this.bb_pos+t):0}representationsSamplesArray(){const t=this.bb.__offset(this.bb_pos,16);return t?new Uint32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+t),this.bb.__vector_len(this.bb_pos+t)):null}lines(t,e){const s=this.bb.__offset(this.bb_pos,18);return s?(e||new k).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+s)+t*4),this.bb):null}linesLength(){const t=this.bb.__offset(this.bb_pos,18);return t?this.bb.__vector_len(this.bb_pos+t):0}walls(t,e){const s=this.bb.__offset(this.bb_pos,20);return s?(e||new cr).__init(this.bb.__vector(this.bb_pos+s)+t*36,this.bb):null}wallsLength(){const t=this.bb.__offset(this.bb_pos,20);return t?this.bb.__vector_len(this.bb_pos+t):0}static startGeometries(t){t.startObject(9)}static addSamples(t,e){t.addFieldOffset(0,e,0)}static startSamplesVector(t,e){t.startVector(8,e,4)}static addSampleIds(t,e){t.addFieldOffset(1,e,0)}static createSampleIdsVector(t,e){t.startVector(4,e.length,4);for(let s=e.length-1;s>=0;s--)t.addInt32(e[s]);return t.endVector()}static startSampleIdsVector(t,e){t.startVector(4,e,4)}static addRepresentations(t,e){t.addFieldOffset(2,e,0)}static startRepresentationsVector(t,e){t.startVector(8,e,4)}static addRepresentationIds(t,e){t.addFieldOffset(3,e,0)}static createRepresentationIdsVector(t,e){t.startVector(4,e.length,4);for(let s=e.length-1;s>=0;s--)t.addInt32(e[s]);return t.endVector()}static startRepresentationIdsVector(t,e){t.startVector(4,e,4)}static addTransforms(t,e){t.addFieldOffset(4,e,0)}static startTransformsVector(t,e){t.startVector(48,e,8)}static addTransformIds(t,e){t.addFieldOffset(5,e,0)}static createTransformIdsVector(t,e){t.startVector(4,e.length,4);for(let s=e.length-1;s>=0;s--)t.addInt32(e[s]);return t.endVector()}static startTransformIdsVector(t,e){t.startVector(4,e,4)}static addRepresentationsSamples(t,e){t.addFieldOffset(6,e,0)}static createRepresentationsSamplesVector(t,e){t.startVector(4,e.length,4);for(let s=e.length-1;s>=0;s--)t.addInt32(e[s]);return t.endVector()}static startRepresentationsSamplesVector(t,e){t.startVector(4,e,4)}static addLines(t,e){t.addFieldOffset(7,e,0)}static createLinesVector(t,e){t.startVector(4,e.length,4);for(let s=e.length-1;s>=0;s--)t.addOffset(e[s]);return t.endVector()}static startLinesVector(t,e){t.startVector(4,e,4)}static addWalls(t,e){t.addFieldOffset(8,e,0)}static startWallsVector(t,e){t.startVector(36,e,4)}static endGeometries(t){const e=t.endObject();return t.requiredField(e,4),t.requiredField(e,8),t.requiredField(e,12),t.requiredField(e,18),e}static createGeometries(t,e,s,i,o,r,n,I,a,c){return U.startGeometries(t),U.addSamples(t,e),U.addSampleIds(t,s),U.addRepresentations(t,i),U.addRepresentationIds(t,o),U.addTransforms(t,r),U.addTransformIds(t,n),U.addRepresentationsSamples(t,I),U.addLines(t,a),U.addWalls(t,c),U.endGeometries(t)}}class Ue{constructor(){E(this,"bb",null);E(this,"bb_pos",0)}__init(t,e){return this.bb_pos=t,this.bb=e,this}r(){return this.bb.readUint8(this.bb_pos)}mutate_r(t){return this.bb.writeUint8(this.bb_pos+0,t),!0}g(){return this.bb.readUint8(this.bb_pos+1)}mutate_g(t){return this.bb.writeUint8(this.bb_pos+1,t),!0}b(){return this.bb.readUint8(this.bb_pos+2)}mutate_b(t){return this.bb.writeUint8(this.bb_pos+2,t),!0}a(){return this.bb.readUint8(this.bb_pos+3)}mutate_a(t){return this.bb.writeUint8(this.bb_pos+3,t),!0}renderedFaces(){return this.bb.readInt8(this.bb_pos+4)}mutate_rendered_faces(t){return this.bb.writeInt8(this.bb_pos+4,t),!0}stroke(){return this.bb.readInt8(this.bb_pos+5)}mutate_stroke(t){return this.bb.writeInt8(this.bb_pos+5,t),!0}static sizeOf(){return 6}static createMaterial(t,e,s,i,o,r,n){return t.prep(1,6),t.writeInt8(n),t.writeInt8(r),t.writeInt8(o),t.writeInt8(i),t.writeInt8(s),t.writeInt8(e),t.offset()}}class Me{constructor(){E(this,"bb",null);E(this,"bb_pos",0)}__init(t,e){return this.bb_pos=t,this.bb=e,this}id(){return this.bb.readUint32(this.bb_pos)}mutate_id(t){return this.bb.writeUint32(this.bb_pos+0,t),!0}bbox(t){return(t||new Ir).__init(this.bb_pos+4,this.bb)}representationClass(){return this.bb.readInt8(this.bb_pos+28)}mutate_representation_class(t){return this.bb.writeInt8(this.bb_pos+28,t),!0}static sizeOf(){return 32}static createRepresentation(t,e,s,i,o,r,n,I,a){return t.prep(4,32),t.pad(3),t.writeInt8(a),t.prep(4,24),t.prep(4,12),t.writeFloat32(I),t.writeFloat32(n),t.writeFloat32(r),t.prep(4,12),t.writeFloat32(o),t.writeFloat32(i),t.writeFloat32(s),t.writeInt32(e),t.offset()}}class De{constructor(){E(this,"bb",null);E(this,"bb_pos",0)}__init(t,e){return this.bb_pos=t,this.bb=e,this}item(){return this.bb.readUint32(this.bb_pos)}mutate_item(t){return this.bb.writeUint32(this.bb_pos+0,t),!0}material(){return this.bb.readUint32(this.bb_pos+4)}mutate_material(t){return this.bb.writeUint32(this.bb_pos+4,t),!0}representation(){return this.bb.readUint32(this.bb_pos+8)}mutate_representation(t){return this.bb.writeUint32(this.bb_pos+8,t),!0}localTransform(){return this.bb.readUint32(this.bb_pos+12)}mutate_local_transform(t){return this.bb.writeUint32(this.bb_pos+12,t),!0}static sizeOf(){return 16}static createSample(t,e,s,i,o){return t.prep(4,16),t.writeInt32(o),t.writeInt32(i),t.writeInt32(s),t.writeInt32(e),t.offset()}}class D{constructor(){E(this,"bb",null);E(this,"bb_pos",0)}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsMeshes(t,e){return(e||new D).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsMeshes(t,e){return t.setPosition(t.position()+Lt),(e||new D).__init(t.readInt32(t.position())+t.position(),t)}coordinates(t){const e=this.bb.__offset(this.bb_pos,4);return e?(t||new ut).__init(this.bb_pos+e,this.bb):null}meshesItems(t){const e=this.bb.__offset(this.bb_pos,6);return e?this.bb.readUint32(this.bb.__vector(this.bb_pos+e)+t*4):0}meshesItemsLength(){const t=this.bb.__offset(this.bb_pos,6);return t?this.bb.__vector_len(this.bb_pos+t):0}meshesItemsArray(){const t=this.bb.__offset(this.bb_pos,6);return t?new Uint32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+t),this.bb.__vector_len(this.bb_pos+t)):null}samples(t,e){const s=this.bb.__offset(this.bb_pos,8);return s?(e||new De).__init(this.bb.__vector(this.bb_pos+s)+t*16,this.bb):null}samplesLength(){const t=this.bb.__offset(this.bb_pos,8);return t?this.bb.__vector_len(this.bb_pos+t):0}representations(t,e){const s=this.bb.__offset(this.bb_pos,10);return s?(e||new Me).__init(this.bb.__vector(this.bb_pos+s)+t*32,this.bb):null}representationsLength(){const t=this.bb.__offset(this.bb_pos,10);return t?this.bb.__vector_len(this.bb_pos+t):0}materials(t,e){const s=this.bb.__offset(this.bb_pos,12);return s?(e||new Ue).__init(this.bb.__vector(this.bb_pos+s)+t*6,this.bb):null}materialsLength(){const t=this.bb.__offset(this.bb_pos,12);return t?this.bb.__vector_len(this.bb_pos+t):0}circleExtrusions(t,e){const s=this.bb.__offset(this.bb_pos,14);return s?(e||new Ut).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+s)+t*4),this.bb):null}circleExtrusionsLength(){const t=this.bb.__offset(this.bb_pos,14);return t?this.bb.__vector_len(this.bb_pos+t):0}shells(t,e){const s=this.bb.__offset(this.bb_pos,16);return s?(e||new Mt).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+s)+t*4),this.bb):null}shellsLength(){const t=this.bb.__offset(this.bb_pos,16);return t?this.bb.__vector_len(this.bb_pos+t):0}localTransforms(t,e){const s=this.bb.__offset(this.bb_pos,18);return s?(e||new ut).__init(this.bb.__vector(this.bb_pos+s)+t*48,this.bb):null}localTransformsLength(){const t=this.bb.__offset(this.bb_pos,18);return t?this.bb.__vector_len(this.bb_pos+t):0}globalTransforms(t,e){const s=this.bb.__offset(this.bb_pos,20);return s?(e||new ut).__init(this.bb.__vector(this.bb_pos+s)+t*48,this.bb):null}globalTransformsLength(){const t=this.bb.__offset(this.bb_pos,20);return t?this.bb.__vector_len(this.bb_pos+t):0}static startMeshes(t){t.startObject(9)}static addCoordinates(t,e){t.addFieldStruct(0,e,0)}static addMeshesItems(t,e){t.addFieldOffset(1,e,0)}static createMeshesItemsVector(t,e){t.startVector(4,e.length,4);for(let s=e.length-1;s>=0;s--)t.addInt32(e[s]);return t.endVector()}static startMeshesItemsVector(t,e){t.startVector(4,e,4)}static addSamples(t,e){t.addFieldOffset(2,e,0)}static startSamplesVector(t,e){t.startVector(16,e,4)}static addRepresentations(t,e){t.addFieldOffset(3,e,0)}static startRepresentationsVector(t,e){t.startVector(32,e,4)}static addMaterials(t,e){t.addFieldOffset(4,e,0)}static startMaterialsVector(t,e){t.startVector(6,e,1)}static addCircleExtrusions(t,e){t.addFieldOffset(5,e,0)}static createCircleExtrusionsVector(t,e){t.startVector(4,e.length,4);for(let s=e.length-1;s>=0;s--)t.addOffset(e[s]);return t.endVector()}static startCircleExtrusionsVector(t,e){t.startVector(4,e,4)}static addShells(t,e){t.addFieldOffset(6,e,0)}static createShellsVector(t,e){t.startVector(4,e.length,4);for(let s=e.length-1;s>=0;s--)t.addOffset(e[s]);return t.endVector()}static startShellsVector(t,e){t.startVector(4,e,4)}static addLocalTransforms(t,e){t.addFieldOffset(7,e,0)}static startLocalTransformsVector(t,e){t.startVector(48,e,8)}static addGlobalTransforms(t,e){t.addFieldOffset(8,e,0)}static startGlobalTransformsVector(t,e){t.startVector(48,e,8)}static endMeshes(t){const e=t.endObject();return t.requiredField(e,4),t.requiredField(e,6),t.requiredField(e,8),t.requiredField(e,10),t.requiredField(e,12),t.requiredField(e,14),t.requiredField(e,16),t.requiredField(e,18),t.requiredField(e,20),e}static createMeshes(t,e,s,i,o,r,n,I,a,c){return D.startMeshes(t),D.addCoordinates(t,e),D.addMeshesItems(t,s),D.addSamples(t,i),D.addRepresentations(t,o),D.addMaterials(t,r),D.addCircleExtrusions(t,n),D.addShells(t,I),D.addLocalTransforms(t,a),D.addGlobalTransforms(t,c),D.endMeshes(t)}}class St{constructor(){E(this,"bb",null);E(this,"bb_pos",0)}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsRelation(t,e){return(e||new St).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsRelation(t,e){return t.setPosition(t.position()+Lt),(e||new St).__init(t.readInt32(t.position())+t.position(),t)}data(t,e){const s=this.bb.__offset(this.bb_pos,4);return s?this.bb.__string(this.bb.__vector(this.bb_pos+s)+t*4,e):null}dataLength(){const t=this.bb.__offset(this.bb_pos,4);return t?this.bb.__vector_len(this.bb_pos+t):0}static startRelation(t){t.startObject(1)}static addData(t,e){t.addFieldOffset(0,e,0)}static createDataVector(t,e){t.startVector(4,e.length,4);for(let s=e.length-1;s>=0;s--)t.addOffset(e[s]);return t.endVector()}static startDataVector(t,e){t.startVector(4,e,4)}static endRelation(t){const e=t.endObject();return t.requiredField(e,4),e}static createRelation(t,e){return St.startRelation(t),St.addData(t,e),St.endRelation(t)}}class v{constructor(){E(this,"bb",null);E(this,"bb_pos",0)}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsSpatialStructure(t,e){return(e||new v).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsSpatialStructure(t,e){return t.setPosition(t.position()+Lt),(e||new v).__init(t.readInt32(t.position())+t.position(),t)}localId(){const t=this.bb.__offset(this.bb_pos,4);return t?this.bb.readUint32(this.bb_pos+t):null}mutate_local_id(t){const e=this.bb.__offset(this.bb_pos,4);return e===0?!1:(this.bb.writeUint32(this.bb_pos+e,t),!0)}category(t){const e=this.bb.__offset(this.bb_pos,6);return e?this.bb.__string(this.bb_pos+e,t):null}children(t,e){const s=this.bb.__offset(this.bb_pos,8);return s?(e||new v).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+s)+t*4),this.bb):null}childrenLength(){const t=this.bb.__offset(this.bb_pos,8);return t?this.bb.__vector_len(this.bb_pos+t):0}static startSpatialStructure(t){t.startObject(3)}static addLocalId(t,e){t.addFieldInt32(0,e,null)}static addCategory(t,e){t.addFieldOffset(1,e,0)}static addChildren(t,e){t.addFieldOffset(2,e,0)}static createChildrenVector(t,e){t.startVector(4,e.length,4);for(let s=e.length-1;s>=0;s--)t.addOffset(e[s]);return t.endVector()}static startChildrenVector(t,e){t.startVector(4,e,4)}static endSpatialStructure(t){return t.endObject()}static createSpatialStructure(t,e,s,i){return v.startSpatialStructure(t),e!==null&&v.addLocalId(t,e),v.addCategory(t,s),v.addChildren(t,i),v.endSpatialStructure(t)}}class y{constructor(){E(this,"bb",null);E(this,"bb_pos",0)}__init(t,e){return this.bb_pos=t,this.bb=e,this}static getRootAsModel(t,e){return(e||new y).__init(t.readInt32(t.position())+t.position(),t)}static getSizePrefixedRootAsModel(t,e){return t.setPosition(t.position()+Lt),(e||new y).__init(t.readInt32(t.position())+t.position(),t)}static bufferHasIdentifier(t){return t.__has_identifier("0001")}metadata(t){const e=this.bb.__offset(this.bb_pos,4);return e?this.bb.__string(this.bb_pos+e,t):null}guids(t,e){const s=this.bb.__offset(this.bb_pos,6);return s?this.bb.__string(this.bb.__vector(this.bb_pos+s)+t*4,e):null}guidsLength(){const t=this.bb.__offset(this.bb_pos,6);return t?this.bb.__vector_len(this.bb_pos+t):0}guidsItems(t){const e=this.bb.__offset(this.bb_pos,8);return e?this.bb.readUint32(this.bb.__vector(this.bb_pos+e)+t*4):0}guidsItemsLength(){const t=this.bb.__offset(this.bb_pos,8);return t?this.bb.__vector_len(this.bb_pos+t):0}guidsItemsArray(){const t=this.bb.__offset(this.bb_pos,8);return t?new Uint32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+t),this.bb.__vector_len(this.bb_pos+t)):null}maxLocalId(){const t=this.bb.__offset(this.bb_pos,10);return t?this.bb.readUint32(this.bb_pos+t):0}mutate_max_local_id(t){const e=this.bb.__offset(this.bb_pos,10);return e===0?!1:(this.bb.writeUint32(this.bb_pos+e,t),!0)}localIds(t){const e=this.bb.__offset(this.bb_pos,12);return e?this.bb.readUint32(this.bb.__vector(this.bb_pos+e)+t*4):0}localIdsLength(){const t=this.bb.__offset(this.bb_pos,12);return t?this.bb.__vector_len(this.bb_pos+t):0}localIdsArray(){const t=this.bb.__offset(this.bb_pos,12);return t?new Uint32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+t),this.bb.__vector_len(this.bb_pos+t)):null}categories(t,e){const s=this.bb.__offset(this.bb_pos,14);return s?this.bb.__string(this.bb.__vector(this.bb_pos+s)+t*4,e):null}categoriesLength(){const t=this.bb.__offset(this.bb_pos,14);return t?this.bb.__vector_len(this.bb_pos+t):0}meshes(t){const e=this.bb.__offset(this.bb_pos,16);return e?(t||new D).__init(this.bb.__indirect(this.bb_pos+e),this.bb):null}attributes(t,e){const s=this.bb.__offset(this.bb_pos,18);return s?(e||new dt).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+s)+t*4),this.bb):null}attributesLength(){const t=this.bb.__offset(this.bb_pos,18);return t?this.bb.__vector_len(this.bb_pos+t):0}relations(t,e){const s=this.bb.__offset(this.bb_pos,20);return s?(e||new St).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+s)+t*4),this.bb):null}relationsLength(){const t=this.bb.__offset(this.bb_pos,20);return t?this.bb.__vector_len(this.bb_pos+t):0}relationsItems(t){const e=this.bb.__offset(this.bb_pos,22);return e?this.bb.readInt32(this.bb.__vector(this.bb_pos+e)+t*4):0}relationsItemsLength(){const t=this.bb.__offset(this.bb_pos,22);return t?this.bb.__vector_len(this.bb_pos+t):0}relationsItemsArray(){const t=this.bb.__offset(this.bb_pos,22);return t?new Int32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+t),this.bb.__vector_len(this.bb_pos+t)):null}guid(t){const e=this.bb.__offset(this.bb_pos,24);return e?this.bb.__string(this.bb_pos+e,t):null}spatialStructure(t){const e=this.bb.__offset(this.bb_pos,26);return e?(t||new v).__init(this.bb.__indirect(this.bb_pos+e),this.bb):null}alignments(t,e){const s=this.bb.__offset(this.bb_pos,28);return s?(e||new at).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+s)+t*4),this.bb):null}alignmentsLength(){const t=this.bb.__offset(this.bb_pos,28);return t?this.bb.__vector_len(this.bb_pos+t):0}geometries(t){const e=this.bb.__offset(this.bb_pos,30);return e?(t||new U).__init(this.bb.__indirect(this.bb_pos+e),this.bb):null}uniqueAttributes(t,e){const s=this.bb.__offset(this.bb_pos,32);return s?this.bb.__string(this.bb.__vector(this.bb_pos+s)+t*4,e):null}uniqueAttributesLength(){const t=this.bb.__offset(this.bb_pos,32);return t?this.bb.__vector_len(this.bb_pos+t):0}relationNames(t,e){const s=this.bb.__offset(this.bb_pos,34);return s?this.bb.__string(this.bb.__vector(this.bb_pos+s)+t*4,e):null}relationNamesLength(){const t=this.bb.__offset(this.bb_pos,34);return t?this.bb.__vector_len(this.bb_pos+t):0}static startModel(t){t.startObject(16)}static addMetadata(t,e){t.addFieldOffset(0,e,0)}static addGuids(t,e){t.addFieldOffset(1,e,0)}static createGuidsVector(t,e){t.startVector(4,e.length,4);for(let s=e.length-1;s>=0;s--)t.addOffset(e[s]);return t.endVector()}static startGuidsVector(t,e){t.startVector(4,e,4)}static addGuidsItems(t,e){t.addFieldOffset(2,e,0)}static createGuidsItemsVector(t,e){t.startVector(4,e.length,4);for(let s=e.length-1;s>=0;s--)t.addInt32(e[s]);return t.endVector()}static startGuidsItemsVector(t,e){t.startVector(4,e,4)}static addMaxLocalId(t,e){t.addFieldInt32(3,e,0)}static addLocalIds(t,e){t.addFieldOffset(4,e,0)}static createLocalIdsVector(t,e){t.startVector(4,e.length,4);for(let s=e.length-1;s>=0;s--)t.addInt32(e[s]);return t.endVector()}static startLocalIdsVector(t,e){t.startVector(4,e,4)}static addCategories(t,e){t.addFieldOffset(5,e,0)}static createCategoriesVector(t,e){t.startVector(4,e.length,4);for(let s=e.length-1;s>=0;s--)t.addOffset(e[s]);return t.endVector()}static startCategoriesVector(t,e){t.startVector(4,e,4)}static addMeshes(t,e){t.addFieldOffset(6,e,0)}static addAttributes(t,e){t.addFieldOffset(7,e,0)}static createAttributesVector(t,e){t.startVector(4,e.length,4);for(let s=e.length-1;s>=0;s--)t.addOffset(e[s]);return t.endVector()}static startAttributesVector(t,e){t.startVector(4,e,4)}static addRelations(t,e){t.addFieldOffset(8,e,0)}static createRelationsVector(t,e){t.startVector(4,e.length,4);for(let s=e.length-1;s>=0;s--)t.addOffset(e[s]);return t.endVector()}static startRelationsVector(t,e){t.startVector(4,e,4)}static addRelationsItems(t,e){t.addFieldOffset(9,e,0)}static createRelationsItemsVector(t,e){t.startVector(4,e.length,4);for(let s=e.length-1;s>=0;s--)t.addInt32(e[s]);return t.endVector()}static startRelationsItemsVector(t,e){t.startVector(4,e,4)}static addGuid(t,e){t.addFieldOffset(10,e,0)}static addSpatialStructure(t,e){t.addFieldOffset(11,e,0)}static addAlignments(t,e){t.addFieldOffset(12,e,0)}static createAlignmentsVector(t,e){t.startVector(4,e.length,4);for(let s=e.length-1;s>=0;s--)t.addOffset(e[s]);return t.endVector()}static startAlignmentsVector(t,e){t.startVector(4,e,4)}static addGeometries(t,e){t.addFieldOffset(13,e,0)}static addUniqueAttributes(t,e){t.addFieldOffset(14,e,0)}static createUniqueAttributesVector(t,e){t.startVector(4,e.length,4);for(let s=e.length-1;s>=0;s--)t.addOffset(e[s]);return t.endVector()}static startUniqueAttributesVector(t,e){t.startVector(4,e,4)}static addRelationNames(t,e){t.addFieldOffset(15,e,0)}static createRelationNamesVector(t,e){t.startVector(4,e.length,4);for(let s=e.length-1;s>=0;s--)t.addOffset(e[s]);return t.endVector()}static startRelationNamesVector(t,e){t.startVector(4,e,4)}static endModel(t){const e=t.endObject();return t.requiredField(e,6),t.requiredField(e,8),t.requiredField(e,12),t.requiredField(e,14),t.requiredField(e,16),t.requiredField(e,24),e}static finishModelBuffer(t,e){t.finish(e,"0001")}static finishSizePrefixedModelBuffer(t,e){t.finish(e,"0001",!0)}}var yt=(f=>(f[f.NONE=0]="NONE",f[f.SHELL=1]="SHELL",f[f.CIRCLE_EXTRUSION=2]="CIRCLE_EXTRUSION",f))(yt||{});class Tr{constructor(t,e){E(this,"_lengthUnitsFactor",1);E(this,"_attributesOffsets",[]);E(this,"_relationsMap",{});E(this,"_guids",[]);E(this,"_guidsItems",[]);E(this,"_uniqueAttributes",new Set);E(this,"_uniqueRelNames",new Set);E(this,"_ifcApi",null);E(this,"wasm",{path:"/node_modules/web-ifc/",absolute:!1});E(this,"expressIDs",[]);E(this,"classes",[]);this._serializer=t,this._builder=e}async getIfcApi(){if(!this._ifcApi){const t=new ae;t.SetWasmPath(this.wasm.path,this.wasm.absolute),await t.Init(),t.SetLogLevel(pe.LOG_LEVEL_OFF),this._ifcApi=t}return this._ifcApi}async getSchema(t=0){const s=(await this.getIfcApi()).GetModelSchema(t);if(!s)throw new Error("Fragments: IFC Schema not found");return s.startsWith("IFC2X3")?"IFC2X3":s.startsWith("IFC4")&&s.replace("IFC4","")===""?"IFC4":s.startsWith("IFC4X")?"IFC4X3":s}async process(t){var L,z,Q;const e=await this.getIfcApi();if(t.readFromCallback)e.OpenModelFromCallback(t.readCallback,{COORDINATE_TO_ORIGIN:!0});else if(t.bytes)await e.OpenModel(t.bytes,{COORDINATE_TO_ORIGIN:!0});else throw new Error("Fragments: No data provided");this._serializer.replaceStoreyElevation&&await this.setLengthUnitsFactor();const s=e.GetAllTypesOfModel(0).map(b=>b.typeID),i=await this.getSchema();if(!Xe[i])throw new Error("Fragments: Model schema not recognized.");const r=t.geometryProcessedLocalIDs;await this.processItems(r);const n=new Set(r);(L=t.progressCallback)==null||L.call(t,.6,{process:"attributes",state:"start",entitiesProcessed:r.length});const I=new Set([...this._serializer.classes.abstract,...this._serializer.classes.elements]),a=s.filter(b=>I.has(b)),c=.15/a.length;for(const[b,p]of a.entries()){const W=e.GetLineIDsWithType(0,p);if(W.size()===0)continue;const J=[];for(let G=0;G<W.size();G++){const $=W.get(G);n.has($)||J.push($)}J.length!==0&&(await this.processItems(J),(z=t.progressCallback)==null||z.call(t,c*(b+1)+.6,{process:"attributes",state:b+1===a.length?"finish":"inProgress",class:Xt[p],entitiesProcessed:J.length}))}const F=new Set([...this._serializer.relations.keys()]),T=s.filter(b=>F.has(b)),C=.15/T.length;for(const[b,p]of T.entries()){const W=b===0?"start":b+1===T.length?"finish":"inProgress";await this.processRelations([p]),(Q=t.progressCallback)==null||Q.call(t,C*(b+1)+.75,{process:"relations",state:W,class:Xt[p]})}const{relIndicesVector:A,relsVector:d}=this.getRelationsVector(),{guidsVector:R,guidsItemsVector:O}=this.getGuidsVector(),S=await this.getMetadataOffset(),w=this.getAttributesVector(),B=this.getUniqueAttributesVector(),H=this.getRelNamesVector(),g=y.createLocalIdsVector(this._builder,this.expressIDs),P=this.getCategoriesVector(),M=await this.getSpatialStructureOffset();return this.clean(),{relIndicesVector:A,relsVector:d,guidsVector:R,guidsItemsVector:O,metadataOffset:S,attributesVector:w,localIdsVector:g,categoriesVector:P,spatialStrutureOffset:M,uniqueAttributesVector:B,relNamesVector:H}}async processItems(t){const e=await this.getIfcApi();for(let s=0;s<t.length;s++){const i=t[s];try{const o=await e.properties.getItemProperties(0,i);if(!o)continue;const r=Xt[o.type];this.classes.push(r),this.expressIDs.push(i),await this.serializeAttributes(i,o)}catch(o){console.log(`Problem reading properties for ${i}`),console.log(o),await new Promise(r=>{setTimeout(r,100)});continue}}}addRelation(t,e,s){this._relationsMap[t]||(this._relationsMap[t]={}),this._relationsMap[t][e]||(this._relationsMap[t][e]=[]);for(const i of s)this._relationsMap[t][e].push(i);this._serializer.includeRelationNames&&this._uniqueRelNames.add(e)}async getStoreyElevation(t,e){const s=await this.getIfcApi(),i=await s.properties.getItemProperties(0,t);let o;i!=null&&i.RelativePlacement&&"value"in i.RelativePlacement&&typeof i.RelativePlacement.value=="number"&&(o=await s.properties.getItemProperties(0,i.RelativePlacement.value));let r;o!=null&&o.Location&&"value"in o.Location&&typeof o.Location.value=="number"&&(r=await s.properties.getItemProperties(0,o.Location.value)),r!=null&&r.Coordinates&&Array.isArray(r.Coordinates)&&"value"in r.Coordinates[2]&&typeof r.Coordinates[2].value=="number"&&(e.value+=r.Coordinates[2].value),i!=null&&i.PlacementRelTo&&"value"in i.PlacementRelTo&&typeof i.PlacementRelTo.value=="number"&&await this.getStoreyElevation(i.PlacementRelTo.value,e)}async setLengthUnitsFactor(){var s,i,o;const t=await this.getIfcApi(),e=t.GetLineIDsWithType(0,We);if(e.size()!==0)for(let r=0;r<e.size();r++){const n=e.get(r),I=await t.properties.getItemProperties(0,n);for(const a of I.Units){const c=await t.properties.getItemProperties(0,a.value);if(c.UnitType.value!=="LENGTHUNIT")continue;let T=1,C=1;c.Name.value==="METRE"&&(C=1),c.Name.value==="FOOT"&&(C=.3048),((s=c.Prefix)==null?void 0:s.value)==="MILLI"?T=.001:((i=c.Prefix)==null?void 0:i.value)==="CENTI"?T=.01:((o=c.Prefix)==null?void 0:o.value)==="DECI"&&(T=.1),this._lengthUnitsFactor=C*T}}}async serializeAttributes(t,e){const s=[];let i=null;if(this._serializer.replaceStoreyElevation&&e.type&&typeof e.type=="number"&&e.type===Ce&&e.Elevation&&"value"in e.Elevation){const n={value:0};e.ObjectPlacement&&"value"in e.ObjectPlacement&&typeof e.ObjectPlacement.value=="number"&&await this.getStoreyElevation(e.ObjectPlacement.value,n),e.Elevation.value=n.value*this._lengthUnitsFactor}for(const[n,I]of Object.entries(e)){if(typeof I=="number"||this._serializer.attributesToExclude.has(n)||I===null||I===void 0)continue;if(Array.isArray(I)){const F=I.filter(A=>A.type!==5);if(F.length>0){const A=F.map(w=>w.value),d=[n,A],R="name"in F[0]&&F[0].name?F[0].name:F[0].constructor.name.toUpperCase();d.push(R!=="OBJECT"?R:"UNDEFINED");const O=JSON.stringify(d),S=this._builder.createSharedString(O);s.push(S)}const C=I.filter(A=>A.type===5).map(A=>A.value);this.addRelation(t,n,C);continue}const{value:a,type:c}=I;if(c===5){if(typeof a!="number")continue;this.addRelation(t,n,[a])}else{if(n==="GlobalId"&&typeof a=="string"){i=a;continue}const F=[n,a],T="name"in I&&I.name?I.name:I.constructor.name.toUpperCase();F.push(T!=="OBJECT"?T:"UNDEFINED");const C=JSON.stringify(F),A=this._builder.createSharedString(C);s.push(A),this._serializer.includeUniqueAttributes&&this._uniqueAttributes.add(C)}}const o=dt.createDataVector(this._builder,s),r=dt.createAttribute(this._builder,o);this._attributesOffsets.push(r),i&&(this._guids.push(i),this._guidsItems.push(t))}getAttributesVector(){return y.createAttributesVector(this._builder,this._attributesOffsets)}getUniqueAttributesVector(){const t=[];for(const s of this._uniqueAttributes){const i=this._builder.createSharedString(s);t.push(i)}return y.createUniqueAttributesVector(this._builder,t)}getRelNamesVector(){const t=[];for(const s of this._uniqueRelNames){const i=this._builder.createSharedString(s);t.push(i)}return y.createRelationNamesVector(this._builder,t)}getGuidsVector(){const t=[];for(const i of this._guids){const o=this._builder.createString(i);t.push(o)}const e=y.createGuidsVector(this._builder,t),s=y.createGuidsItemsVector(this._builder,this._guidsItems);return{guidsVector:e,guidsItemsVector:s}}async processRelations(t){const e=await this.getIfcApi();for(const s of t){const i=this._serializer.relations.get(s);if(!i)continue;const{forRelating:o,forRelated:r}=i,n=e.GetLineIDsWithType(0,s);if(n.size()!==0)for(let I=0;I<n.size();I++){const a=n.get(I),c=await e.properties.getItemProperties(0,a);if(!c)continue;const F=Object.keys(c),T=F.find(R=>R.startsWith("Relating")),C=F.find(R=>R.startsWith("Related"));if(!(T&&C))continue;const A=c[T].value,d=c[C].map(({value:R})=>R);this.addRelation(A,o,d);for(const R of d)this.addRelation(R,r,[A])}}}getRelationsVector(t=!1){const e=[],s=[];for(const[r,n]of Object.entries(this._relationsMap)){if(t&&!this.expressIDs.includes(Number(r)))continue;const I=[];for(const[F,T]of Object.entries(n)){let C=T;if(t&&(C=T.filter(R=>this.expressIDs.includes(R)),C.length===0))continue;const A=JSON.stringify([F,...C]),d=this._builder.createSharedString(A);I.push(d)}if(t&&I.length===0)continue;s.push(Number(r));const a=St.createDataVector(this._builder,I),c=St.createRelation(this._builder,a);e.push(c)}const i=y.createRelationsVector(this._builder,e);return{relIndicesVector:y.createRelationsItemsVector(this._builder,s),relsVector:i}}getCategoriesVector(){const t=this.classes.map(s=>this._builder.createSharedString(s));return y.createCategoriesVector(this._builder,t)}async getMetadataOffset(){const s={schema:(await this.getIfcApi()).GetModelSchema(0)};return this._builder.createString(JSON.stringify(s))}getEntityDecomposition(t,e){var r;const s=[];for(const n of e){const I=(r=this._relationsMap[t])==null?void 0:r[n];if(!I)continue;const a={};for(const c of I){const F=this.expressIDs.indexOf(c);if(F===-1)continue;const T=this.classes[F];T&&(a[T]||(a[T]=[]),a[T].push(c))}for(const c in a){const T=a[c].map(R=>this.getEntityDecomposition(R,e)),C=v.createChildrenVector(this._builder,T),A=this._builder.createSharedString(c);v.startSpatialStructure(this._builder),v.addCategory(this._builder,A),v.addChildren(this._builder,C);const d=v.endSpatialStructure(this._builder);s.push(d)}}const i=v.createChildrenVector(this._builder,s);return v.startSpatialStructure(this._builder),v.addLocalId(this._builder,t),v.addChildren(this._builder,i),v.endSpatialStructure(this._builder)}async getSpatialStructureOffset(){const t=await this.getIfcApi(),e=ce,i=[...t.GetLineIDsWithType(0,e)].map(I=>this.getEntityDecomposition(I,["IsDecomposedBy","ContainsElements"])),o=this._builder.createSharedString("IFCPROJECT"),r=v.createChildrenVector(this._builder,i);return v.startSpatialStructure(this._builder),v.addCategory(this._builder,o),v.addChildren(this._builder,r),v.endSpatialStructure(this._builder)}clean(){var t;(t=this._ifcApi)==null||t.Dispose(),this._ifcApi=null,this._guids=[],this._guidsItems=[],this._attributesOffsets=[],this._relationsMap={},this._uniqueAttributes.clear(),this._uniqueRelNames.clear(),this.expressIDs=[],this.classes=[]}}function Y(f,t){return Math.round(f*t)/t}class Rr{constructor(t,e,s,i){E(this,"x");E(this,"y");E(this,"z");E(this,"hash");E(this,"id");this.x=Y(t[e*3],i),this.y=Y(t[e*3+1],i),this.z=Y(t[e*3+2],i),this.hash=`${this.x}/${this.y}/${this.z}`,this.id=s}}class Fr{constructor(t){E(this,"list",new Map);E(this,"tempV1",new K);E(this,"tempV2",new K);E(this,"tempV3",new K);E(this,"precission");this.precission=t}create(t,e){const s=new Rr(t,e,this.list.size,this.precission);return this.list.has(s.hash)||this.list.set(s.hash,s),this.list.get(s.hash)}get(){return Array.from(this.list.values()).map(t=>[t.x,t.y,t.z])}isValidTriangle(t,e,s,i){this.tempV1.set(t[e*3],t[e*3+1],t[e*3+2]),this.tempV2.set(t[s*3],t[s*3+1],t[s*3+2]),this.tempV3.set(t[i*3],t[i*3+1],t[i*3+2]);const o=1/this.precission*10,r=this.tempV1.distanceTo(this.tempV2)>o,n=this.tempV1.distanceTo(this.tempV3)>o,I=this.tempV2.distanceTo(this.tempV3)>o;return r&&n&&I}}class jt{constructor(t,e){E(this,"p1");E(this,"p2");E(this,"hash");this.p1=t,this.p2=e;const s=[this.p1,this.p2];s.sort((i,o)=>i.x-o.x||i.y-o.y||i.z-o.z),this.hash=`${s[0].hash}_${s[1].hash}`}}class hr{constructor(t,e){E(this,"edges",new Map);E(this,"openEdges",new Set);E(this,"id");E(this,"plane");this.id=t,this.plane=e}add(t){if(this.edges.size===0){for(const e of t)this.openEdges.add(e.hash),this.edges.set(e.hash,e);return}for(const e of t)this.openEdges.has(e.hash)?this.openEdges.delete(e.hash):this.openEdges.add(e.hash),this.edges.set(e.hash,e)}match(t,e){if(e.id!==this.plane.id)return!1;for(const s of t)if(this.openEdges.has(s.hash))return!0;return!1}getOpenEdges(){const t=[];for(const e of this.openEdges)t.push(this.edges.get(e));return t}merge(t){for(const[e,s]of t.edges)this.edges.set(e,s);for(const e of t.openEdges)this.openEdges.has(e)?this.openEdges.delete(e):this.openEdges.add(e)}}class lr{constructor(){E(this,"list",new Map);E(this,"nextFaceID",0)}add(t,e){const s=this.match(t,e);if(s.length===0){const i=this.nextFaceID++,o=new hr(i,e);o.add(t),this.list.set(o.id,o);return}if(s.length===1){this.list.get(s[0]).add(t);return}if(s.length>1){const i=this.list.get(s[0]);i.add(t);for(let o=1;o<s.length;o++){const r=s[o],n=this.list.get(r);i.merge(n),this.list.delete(r)}}}match(t,e){let s=[];for(const i of this.list.values())i.match(t,e)&&s.push(i.id);return s}}class Ar{constructor(t){E(this,"closed",!1);E(this,"openStartPoint",null);E(this,"openEndPoint",null);E(this,"plane");E(this,"orderedPoints",[]);this.plane=t}getEdges(t=!1){const e=[];if(t)for(let s=this.orderedPoints.length-1;s>0;s--)e.push(new jt(this.orderedPoints[s],this.orderedPoints[s-1]));else for(let s=0;s<this.orderedPoints.length-1;s++)e.push(new jt(this.orderedPoints[s],this.orderedPoints[s+1]));return e}getIndices(){return this.orderedPoints.map(t=>t.id)}add(t){if(this.orderedPoints.length===0){this.openStartPoint=t.p1.hash,this.openEndPoint=t.p2.hash,this.orderedPoints.push(t.p1,t.p2);return}const e=this.match(t);if(e===0)throw new Error("Fragments: Edge doesn't match with any open point");if(e>2)throw new Error("Fragments: Edge matches with more than 2 open points");if(e===2){this.closed=!0,this.openEndPoint=null,this.openStartPoint=null;return}this.openStartPoint===t.p1.hash?(this.orderedPoints.unshift(t.p2),this.openStartPoint=t.p2.hash):this.openEndPoint===t.p1.hash?(this.orderedPoints.push(t.p2),this.openEndPoint=t.p2.hash):this.openStartPoint===t.p2.hash?(this.orderedPoints.unshift(t.p1),this.openStartPoint=t.p1.hash):this.openEndPoint===t.p2.hash&&(this.orderedPoints.push(t.p1),this.openEndPoint=t.p1.hash)}match(t){if(this.closed)return 0;let e=0;return this.openStartPoint===t.p1.hash&&e++,this.openStartPoint===t.p2.hash&&e++,this.openEndPoint===t.p1.hash&&e++,this.openEndPoint===t.p2.hash&&e++,e}merge(t){if(t.closed||this.closed)throw new Error("Fragments: Cannot merge closed profiles");if(t.openStartPoint===this.openEndPoint&&t.openEndPoint===this.openStartPoint)throw new Error("Fragments: Cannot merge profiles that close each other");if(t.openEndPoint===this.openEndPoint&&t.openStartPoint===this.openStartPoint)throw new Error("Fragments: Cannot merge profiles that close each other");let e=!1;(t.openEndPoint===this.openStartPoint||t.openEndPoint===this.openEndPoint)&&(e=!0);const s=t.getEdges(e);for(const i of s)this.add(i)}getArea(){const t=this.orderedPoints.map(a=>[a.x,a.y,a.z]);let e=0,s=1;const i=Math.abs(this.plane.normal.x),o=Math.abs(this.plane.normal.y),r=Math.abs(this.plane.normal.z);i>=o&&i>=r?(e=1,s=2):o>=i&&o>=r?(e=0,s=2):(e=0,s=1);const n=[];for(const a of t)n.push(new je(a[e],a[s]));let I=0;for(let a=0,c=n.length;a<c;a++){const F=n[a].x,T=n[a===n.length-1?0:a+1].y,C=n[a===n.length-1?0:a+1].x,A=n[a].y;I+=F*T*.5,I-=C*A*.5}return Math.abs(I)}}class Or{constructor(t){E(this,"list",new Map);E(this,"plane");E(this,"nextProfileID",0);this.plane=t}add(t){const e=this.match(t);if(e.length===0){const s=this.nextProfileID++,i=new Ar(this.plane);i.add(t),this.list.set(s,i);return}if(e.length===1){this.list.get(e[0]).add(t);return}if(e.length>1){const s=this.list.get(e[0]);s.add(t);const i=this.list.get(e[1]);s.merge(i),this.list.delete(e[1])}}getProfiles(){let t=null,e=0;for(const[o,r]of this.list){const n=r.getArea();n>e&&(e=n,t=o)}if(t===null)return null;const s=this.list.get(t).getIndices(),i=[];for(const[o,r]of this.list)o!==t&&i.push(r.getIndices());return{profile:s,holes:i}}match(t){const e=[];for(const[s,i]of this.list)i.match(t)>0&&e.push(s);return e}}function ge(f){let t=Number.POSITIVE_INFINITY,e=Number.POSITIVE_INFINITY,s=Number.POSITIVE_INFINITY,i=Number.NEGATIVE_INFINITY,o=Number.NEGATIVE_INFINITY,r=Number.NEGATIVE_INFINITY;for(let n=0;n<f.length;n+=3){const I=f[n],a=f[n+1],c=f[n+2];I<t&&(t=I),a<e&&(e=a),c<s&&(s=c),I>i&&(i=I),a>o&&(o=a),c>r&&(r=c)}return{min:{x:t,y:e,z:s},max:{x:i,y:o,z:r}}}class fr{constructor(t,e,s){E(this,"normal");E(this,"constant");E(this,"id");E(this,"faces",[]);const i=Y(t.normal.x,s),o=Y(t.normal.y,s),r=Y(t.normal.z,s),n=Y(t.constant,e);this.normal=new K(i,o,r),this.constant=n;const I="||";this.id=`${i}${I}${o}${I}${r}${I}${n}`}}function Nr(f,t,e){const s=new Map,i=new Map,o=(I,a,c)=>{const F=`${I},${a},${c}`;if(s.has(F))return s.get(F)[0];const T=s.size;return s.set(F,[T,I,a,c]),T};for(let I=0;I<f.length-2;I+=3){const a=f[I],c=f[I+1],F=f[I+2],T=t[a*3],C=t[a*3+1],A=t[a*3+2],d=t[c*3],R=t[c*3+1],O=t[c*3+2],S=t[F*3],w=t[F*3+1],B=t[F*3+2],H=o(T,C,A),g=o(d,R,O),P=o(S,w,B);i.set(i.size,[H,g,P])}const r=[];for(const[,[,I,a,c]]of s)r.push([I,a,c]);return{bbox:e,type:yt.SHELL,profiles:i,holes:new Map,points:r}}function br(f){const{position:t,normals:e,index:s,raw:i}=f,o=3e3,r=1e6,n=1e7,I=1e3,c=t.length/3>o,F=ge(t);if(i||c)return Nr(s,t,F);const T=new $e,C=new K,A=new K,d=new Map;for(let g=0;g<s.length-2;g+=3){const P=s[g];C.set(e[P*3],e[P*3+1],e[P*3+2]),A.set(t[P*3],t[P*3+1],t[P*3+2]),T.setFromNormalAndCoplanarPoint(C,A);const M=new fr(T,I,n);d.has(M.id)||d.set(M.id,M),d.get(M.id).faces.push(g)}const R=new Fr(r),O=new lr;for(const[,g]of d)for(const P of g.faces){const M=s[P],L=s[P+1],z=s[P+2];if(!R.isValidTriangle(t,M,L,z))continue;const Q=R.create(t,M),b=R.create(t,L),p=R.create(t,z),W=new jt(Q,b),J=new jt(b,p),G=new jt(p,Q),$=[W,J,G];O.add($,g)}const S=new Map,w=new Map;let B=0;for(const[,g]of O.list){const P=new Or(g.plane),M=g.getOpenEdges();for(const z of M)P.add(z);const L=P.getProfiles();S.set(B,(L==null?void 0:L.profile)||[]),w.set(B,(L==null?void 0:L.holes)||[]),B++}return{bbox:F,type:yt.SHELL,profiles:S,holes:w,points:R.get()}}class dr{read(t){try{const e=t.GetAllAlignments(0),s=[];for(const i of e){const o={absolute:[],horizontal:[],vertical:[]};s.push(o);let r=0;for(let n=0;n<i.horizontal.length;n++){const I=i.curve3D[0].points,a=i.horizontal[n],c=[],F=[],T=this.getCurveType(a.data[1]),C=[],A=[];for(const O of a.points){const{x:S,y:w,z:B}=I[r++];C.push([S,w,B]),A.push([O.x,O.y])}C.reverse(),A.reverse();for(const[O,S,w]of C)c.push(O,S,w);for(const[O,S]of A)F.push(O,0,-S);const d=new Float32Array(c),R=new Float32Array(F);o.absolute.push({points:d,type:T}),o.horizontal.push({points:R,type:T})}for(let n=0;n<i.vertical.length;n++){const I=i.vertical[n],a=[],c=this.getCurveType(I.data[1]),F=[];for(const C of I.points)F.push([C.x,C.y]);F.reverse();for(const[C,A]of F)a.push(C,A,0);const T=new Float32Array(a);o.vertical.push({points:T,type:c})}}return s}catch(e){return console.error(e),[]}}getCurveType(t){if(t.includes("CIRCULARARC"))return Jt.ELLIPSE_ARC;if(t.includes("LINE")||t.includes("GRADIENT"))return Jt.LINES;if(t.includes("CLOTHOID"))return Jt.CLOTHOID;if(t.includes("PARABOLICARC"))return Jt.PARABOLA;throw new Error(`Fragments: Unknown curve type: ${t}`)}}class Sr{constructor(t){E(this,"_ifcAPI",null);E(this,"wasm",{path:"../../../../node_modules/web-ifc/",absolute:!1});E(this,"_tempObject1",new Fe);E(this,"_tempObject2",new Fe);E(this,"_tempMatrix1",new Ee);E(this,"_previousGeometries",new Map);E(this,"_previousGeometriesIDs",new Map);E(this,"_previousGeometriesScales",new Map);E(this,"_previousLocalTransforms",new Map);E(this,"_problematicGeometries",new Set);E(this,"_problematicGeometriesHashes",new Set);E(this,"_coordinatesInitialized",!1);E(this,"_civilReader",new dr);E(this,"_maxId",0);E(this,"_rawCategories",new Set([ue,_e]));E(this,"distanceThreshold",1e5);E(this,"scene",null);E(this,"isolatedMeshes",null);E(this,"onElementLoaded",()=>{});E(this,"onGeometryLoaded",()=>{});E(this,"onLocalTransformLoaded",()=>{});E(this,"onMaxIdFound",()=>{});E(this,"onCoordinatesLoaded",()=>{});E(this,"onAlignmentsLoaded",()=>{});this._serializer=t}async load(t){var r,n,I;(r=t.progressCallback)==null||r.call(t,0,{process:"conversion",state:"start"}),this._previousGeometriesIDs.clear(),this._ifcAPI=new ae,this._ifcAPI.SetWasmPath(this.wasm.path,this.wasm.absolute),await this._ifcAPI.Init();let e=0;if(t.readFromCallback&&t.readCallback)e=this._ifcAPI.OpenModelFromCallback(t.readCallback,{COORDINATE_TO_ORIGIN:!0});else if(t.bytes)e=await this._ifcAPI.OpenModel(t.bytes,{COORDINATE_TO_ORIGIN:!0});else throw new Error("Fragments: No data provided");this._ifcAPI.SetLogLevel(pe.LOG_LEVEL_OFF),this._maxId=this._ifcAPI.GetMaxExpressID(e),this.onLocalTransformLoaded({id:0,data:[0,0,0,1,0,0,0,1,0]});const s=new K,i=a=>{if(this._ifcAPI===null)throw new Error("Fragments: IfcAPI not initialized");if(!this._coordinatesInitialized){const L=this._ifcAPI.GetCoordinationMatrix(e);this._tempMatrix1.fromArray(L);const z=this.decompose(this._tempMatrix1);this.onCoordinatesLoaded(z),this._coordinatesInitialized=!0}const c=this._ifcAPI.GetLine(0,a.expressID),F={id:a.expressID,type:c.type,guid:c.GlobalId.value,geometries:[]},T=a.geometries.size(),A=a.geometries.get(0).flatTransformation,{transformWithoutScale:d}=this.removeScale(A);if(s.set(0,0,0),s.applyMatrix4(d),s.x>this.distanceThreshold||s.y>this.distanceThreshold||s.z>this.distanceThreshold){console.log(`Object ${F.id} is more than ${this.distanceThreshold} meters away from the origin and will be skipped.`);return}for(let L=0;L<T;L++)F.type===Pe?this.loadCircleExtrusionGeometry(e,F,a,L,d.elements):this.loadShellGeometry(e,F,a,L,d.elements);const{dxx:R,dxy:O,dxz:S,dyx:w,dyy:B,dyz:H,px:g,py:P,pz:M}=this.decompose(d);F.geometries.length>0&&this.onElementLoaded({element:F,position:[g,P,M],xDirection:[R,O,S],yDirection:[w,B,H]})};if((n=this.isolatedMeshes)!=null&&n.size)this._ifcAPI.StreamMeshes(e,Array.from(this.isolatedMeshes),i);else{const c=this._ifcAPI.GetAllTypesOfModel(e).map(T=>T.typeID).filter(T=>this._serializer.classes.elements.has(T)),F=.5/c.length;for(const[T,C]of c.entries()){const A=T===0?"start":T+1===c.length?"finish":"inProgress",d=this._ifcAPI.GetLineIDsWithType(e,C),R=[];for(let O=0;O<d.size();O++)R.push(d.get(O));R.length>0&&(this._ifcAPI.StreamMeshes(e,R,i),(I=t.progressCallback)==null||I.call(t,F*(T+1),{process:"geometries",state:A,class:Xt[C],entitiesProcessed:R.length}))}}const o=this._civilReader.read(this._ifcAPI);this.onAlignmentsLoaded(o),this.onMaxIdFound(this._maxId),this._ifcAPI.Dispose(),this._ifcAPI=null,this._ifcAPI=new ae,this._ifcAPI.SetWasmPath(this.wasm.path,this.wasm.absolute),await this._ifcAPI.Init(),this._previousGeometries.clear(),this._previousGeometriesIDs.clear(),this._previousGeometriesScales.clear(),this._maxId=0,this._previousLocalTransforms.clear(),this._problematicGeometries.clear(),this._problematicGeometriesHashes.clear()}loadCircleExtrusionGeometry(t,e,s,i,o){if(this._ifcAPI===null)throw new Error("Fragments: IfcAPI not initialized");const r=s.geometries.get(i),n=r.flatTransformation,{units:I}=this.removeScale(n),{x:a,y:c,z:F,w:T}=r.color,C={id:r.geometryExpressID,color:[a,c,F,T],localTransformID:null};e.geometries.push(C);const{transformWithoutScale:A}=this.removeScale(r.flatTransformation);if(this._previousGeometriesIDs.has(C.id)){this.getLocalTransform(o,A,C),C.id=this._previousGeometriesIDs.get(C.id);return}this.getLocalTransform(o,A,C);const d=this._ifcAPI.GetGeometry(t,C.id),R=d.GetSweptDiskSolid(),O=[],S=[],w=R.axis.size();for(let b=0;b<w;b++){const p=R.axis.get(b),W=[];for(let G=0;G<p.arcSegments.size();G++)W.push(p.arcSegments.get(G));O.push(W);const J=[];for(let G=0;G<p.points.size();G++){const $=p.points.get(G);J.push({x:$.x*I.x,y:$.y*I.y,z:$.z*I.z})}S.push(J)}const B=[],H=[],g=[],P=[];for(let b=0;b<S.length;b++){const p=S[b],W=O[b],J=p.length;for(let G=0;G<J-1;G++){let $=-1,Ct=-1;for(let Z=0;Z<W.length;Z+=2)if(W[Z]===G){$=G,Ct=W[Z+1];break}if($===-1){const Z=[],ot=p[G],ct=p[G+1],ft=ot.x,tt=ot.y,et=ot.z,lt=ct.x,j=ct.y,V=ct.z;B.push(g.length),Z.push(ft,tt,et,lt,j,V),g.push(Z),H.push(Ae.WIRE)}else{const Z=[],ot=$,ct=Math.round(($+Ct)/2),ft=Ct,tt=p[ot],et=p[ct],lt=p[ft],j=this.computeCircleCurveProperties(tt,et,lt),V=tt.x-j.center.x,At=tt.y-j.center.y,rt=tt.z-j.center.z;let X=Math.sqrt(V*V+At*At+rt*rt);X===0&&(X=1);const pt=V/X,qt=At/X,kt=rt/X,wt=et.x-j.center.x,xt=et.y-j.center.y,Bt=et.z-j.center.z;let _t=Math.sqrt(wt*wt+xt*xt+Bt*Bt);_t===0&&(_t=1);const oe=wt/_t,re=xt/_t,Kt=Bt/_t;let st=this.crossProduct({x:pt,y:qt,z:kt},{x:oe,y:re,z:Kt});X=Math.sqrt(st.x*st.x+st.y*st.y+st.z*st.z),X===0&&(X=1),st={x:st.x/X,y:st.y/X,z:st.z/X},B.push(P.length),Z.push(j.center.x,j.center.y,j.center.z,j.radius,j.angle,pt,qt,kt,st.x,st.y,st.z),P.push(Z),H.push(Ae.CIRCLE_CURVE),G=ft-1}}}const M=this.getGeometryBuffers(t,r);if(M===null){console.log(`Zero length geometry: ${C.id}`),e.geometries.pop(),this._problematicGeometries.add(C.id);return}const{position:L}=M;for(let b=0;b<L.length-2;b+=3)L[b]*=I.x,L[b+1]*=I.y,L[b+2]*=I.z;const z=ge(L),Q=R.profileRadius*I.x;this._previousGeometriesIDs.set(C.id,C.id),this.onGeometryLoaded({id:C.id,geometry:{type:yt.CIRCLE_EXTRUSION,indicesArray:B,typesArray:H,segments:g,circleCurveData:P,radius:Q,bbox:z}}),d.delete()}loadShellGeometry(t,e,s,i,o){if(this._ifcAPI===null)throw new Error("Fragments: IfcAPI not initialized");const r=s.geometries.get(i),n=r.flatTransformation,{units:I}=this.removeScale(n);if(this._problematicGeometries.has(r.geometryExpressID)){console.log(` Problematic geometry: ${r.geometryExpressID}`);return}const{x:a,y:c,z:F,w:T}=r.color,C={id:r.geometryExpressID,color:[a,c,F,T],localTransformID:null};e.geometries.push(C);const{transformWithoutScale:A}=this.removeScale(r.flatTransformation);if(this._previousGeometriesIDs.has(C.id)){const V=this.getScaleHash(I);if(this._previousGeometriesScales.get(C.id)===V){this.getLocalTransform(o,A,C),C.id=this._previousGeometriesIDs.get(C.id);return}const X=++this._maxId;this._previousGeometriesScales.set(X,V),C.id=X}const d=this.getGeometryBuffers(t,r);if(d===null){console.log(`Zero length geometry: ${C.id}`),e.geometries.pop(),this._problematicGeometries.add(C.id);return}const{position:R,normals:O,index:S}=d;for(let V=0;V<R.length-2;V+=3)R[V]*=I.x,R[V+1]*=I.y,R[V+2]*=I.z;const w=R.length/3,B=S.length/3;let H=0,g=0;const P=new qe,M=new K,L=new K,z=new K,Q=this.getVolume(S,R),b=new K;for(let V=0;V<S.length-2;V+=3){const At=S[V],rt=S[V+1],X=S[V+2];M.set(R[At*3],R[At*3+1],R[At*3+2]),L.set(R[rt*3],R[rt*3+1],R[rt*3+2]),z.set(R[X*3],R[X*3+1],R[X*3+2]),b.add(M),b.add(L),b.add(z),P.set(M,L,z);const pt=P.getArea();pt>H&&(H=pt),g+=pt}b.divideScalar(S.length),M.set(R[0],R[1],R[2]),L.set(R[3],R[4],R[5]),z.set(R[6],R[7],R[8]);const p=1e4,W=Y(g,p),J=Y(H,p),G=Y(Q,p),$=Y(M.x,p),Ct=Y(M.y,p),Z=Y(M.z,p),ot=Y(b.x,p),ct=Y(b.x,p),ft=Y(b.x,p),tt=`${w}-${B}-${W}-${J}-${G}-${ot}-${ct}-${ft}-${$}-${Ct}-${Z}`;if(this._problematicGeometriesHashes.has(tt)){console.log(`Problematic geometry: ${C.id}`),e.geometries.pop(),this._problematicGeometries.add(C.id),this._problematicGeometriesHashes.add(tt);return}const et=!this._previousGeometries.has(tt),lt=C.id;if(et)this._previousGeometries.set(tt,lt),this._previousGeometriesIDs.set(lt,lt);else{const V=this._previousGeometries.get(tt);if(V===void 0)throw new Error("Fragments: Previous geometry not found");this._previousGeometriesIDs.set(lt,V),C.id=V}this.getLocalTransform(o,A,C);const j=this._rawCategories.has(e.type);if(et)try{const V=br({position:R,normals:O,index:S,raw:j});this.onGeometryLoaded({id:C.id,geometry:V})}catch{console.error(`Fragments: Problematic geometry: ${C.id}`),e.geometries.pop(),this._problematicGeometries.add(C.id),this._problematicGeometriesHashes.add(tt)}}getScaleHash(t){return`${t.x}-${t.y}-${t.z}`}getLocalTransform(t,e,s){this._tempObject1.position.set(0,0,0),this._tempObject1.rotation.set(0,0,0),this._tempObject1.scale.set(1,1,1),this._tempObject1.updateMatrix(),this._tempMatrix1.fromArray(t),this._tempObject1.applyMatrix4(this._tempMatrix1),this._tempObject2.position.set(0,0,0),this._tempObject2.rotation.set(0,0,0),this._tempObject2.scale.set(1,1,1),this._tempObject2.updateMatrix(),this._tempObject2.applyMatrix4(e),this._tempObject1.attach(this._tempObject2);const{px:i,py:o,pz:r,dxx:n,dxy:I,dxz:a,dyx:c,dyy:F,dyz:T}=this.decompose(this._tempObject2.matrix);if(this._tempObject2.removeFromParent(),!(i===0&&o===0&&r===0&&n===1&&I===0&&a===0&&c===0&&F===1&&T===0)){const A=`${i}-${o}-${r}-${n}-${I}-${a}-${c}-${F}-${T}`,d=this._previousLocalTransforms.get(A);if(d)s.localTransformID=d.id;else{const O={id:this._previousLocalTransforms.size+1,data:[i,o,r,n,I,a,c,F,T]};this._previousLocalTransforms.set(A,O),s.localTransformID=O.id,this.onLocalTransformLoaded(O)}}}removeScale(t){const e=new Ee().fromArray(t),s=new K,i=new ke,o=new K;e.decompose(s,i,o);const r=o,n=new Ee;return n.compose(s,i,new K(1,1,1)),{units:r,transformWithoutScale:n}}decompose(t){const i=Y(t.elements[0],1e3),o=Y(t.elements[1],1e3),r=Y(t.elements[2],1e3),n=Y(t.elements[4],1e5),I=Y(t.elements[5],1e5),a=Y(t.elements[6],1e5),c=Y(t.elements[8],1e5),F=Y(t.elements[9],1e5),T=Y(t.elements[10],1e5),C=Y(t.elements[12],1e5),A=Y(t.elements[13],1e5),d=Y(t.elements[14],1e5);return{dxx:i,dxy:o,dxz:r,dyx:n,dyy:I,dyz:a,dzx:c,dzy:F,dzz:T,px:C,py:A,pz:d}}getVolume(t,e){let s=0;const i=new K,o=new K,r=new K;for(let n=0;n<t.length-2;n+=3){const I=t[n]*3,a=t[n+1]*3,c=t[n+2]*3;i.set(e[I],e[I+1],e[I+2]),o.set(e[a],e[a+1],e[a+2]),r.set(e[c],e[c+1],e[c+2]),s+=this.getSignedVolumeOfTriangle(i,o,r)}return Math.abs(s)}getSignedVolumeOfTriangle(t,e,s){const i=s.x*e.y*t.z,o=e.x*s.y*t.z,r=s.x*t.y*e.z,n=t.x*s.y*e.z,I=e.x*t.y*s.z,a=t.x*e.y*s.z;return 1/6*(-i+o+r-n-I+a)}getGeometryBuffers(t,e){if(!this._ifcAPI)throw new Error("Fragments: IfcAPI not initialized");const s=this._ifcAPI.GetGeometry(t,e.geometryExpressID),i=this._ifcAPI.GetIndexArray(s.GetIndexData(),s.GetIndexDataSize()),o=this._ifcAPI.GetVertexArray(s.GetVertexData(),s.GetVertexDataSize());if(i.length===0||o.length===0)return s.delete(),null;const r=new Float32Array(o.length/2),n=new Float32Array(o.length/2);for(let I=0;I<o.length;I+=6)r[I/2]=o[I],r[I/2+1]=o[I+1],r[I/2+2]=o[I+2],n[I/2]=o[I+3],n[I/2+1]=o[I+4],n[I/2+2]=o[I+5];return s.delete(),{position:r,normals:n,index:i}}crossProduct(t,e){return{x:t.y*e.z-t.z*e.y,y:t.z*e.x-t.x*e.z,z:t.x*e.y-t.y*e.x}}computeCircleCurveProperties(t,e,s){function i(O,S,w){const B=S.x-O.x,H=S.y-O.y,g=S.z-O.z,P=w.x-O.x,M=w.y-O.y,L=w.z-O.z,z=.5*(B**2+H**2+g**2),Q=.5*(P**2+M**2+L**2),b=B*M-H*P,p=H*L-g*M,W=g*P-B*L,J=z*P-Q*B,G=z*M-Q*H,$=z*L-Q*g,Ct=b**2+p**2+W**2;if(Ct===0)throw new Error("Fragments: Points are collinear, no unique circle exists.");const Z=O.x+(b*G-W*$)/Ct,ot=O.y+(p*$-b*J)/Ct,ct=O.z+(W*J-p*G)/Ct;return{x:Z,y:ot,z:ct}}function o(O,S){return{x:O.x-S.x,y:O.y-S.y,z:O.z-S.z}}function r(O){return Math.sqrt(O.x*O.x+O.y*O.y+O.z*O.z)}const n=o(e,t),I=o(s,e),a=this.crossProduct(n,I),c=i(t,e,s),F=o(t,c),T=o(s,c),C=r(o(c,t)),A=o(t,c),d=r(A);A.x/=d,A.y/=d,A.z/=d;const R=Math.acos((F.x*T.x+F.y*T.y+F.z*T.z)/(r(F)*r(T)));return{center:c,radius:C,normal:a,initialTangent:A,angle:R*180/Math.PI}}}class Lr{constructor(t){E(this,"wasm",{path:"../../../../node_modules/web-ifc/",absolute:!1});this._serializer=t}async process(t){const{builder:e}=t;let s=0;const i=[];let o={dxx:1,dxy:0,dxz:0,dyx:0,dyy:1,dyz:0,px:0,py:0,pz:0};const r=[],n=[],I=[],a=[],c=new Map,F=new Map,T=new Map,C=new Sr(this._serializer);C.wasm=this.wasm,C.onGeometryLoaded=h=>{r.push(h)},C.onElementLoaded=h=>{I.push(h)},C.onLocalTransformLoaded=h=>{a.push(h)},C.onCoordinatesLoaded=h=>{o=h},C.onMaxIdFound=h=>{s=h},C.onAlignmentsLoaded=h=>{for(const u of h)n.push(u)},await C.load(t);const A=[];let d=0;D.startGlobalTransformsVector(e,I.length);const R=new Map,O=[];for(let h=0;h<I.length;h++){const u=I[I.length-1-h];A.push(d++);const{position:N,xDirection:l,yDirection:_}=u,[x,m,q]=N,[it,It,nt]=l,[Dt,gt,vt]=_;i.push(I[h].element.id);const Ht=I.length-1-h,zt=u.element.type,Pt=Xt[zt];R.has(Pt)||R.set(Pt,R.size),ut.createTransform(e,x,m,q,it,It,nt,Dt,gt,vt),R.get(Pt),O.unshift(u.element.id),c.set(u.element.id,Ht)}const S=e.endVector(),w=[];for(let h=0;h<r.length;h++){const u=r[h];if(u.geometry.type!==yt.SHELL)continue;const{points:N,profiles:l,holes:_}=u.geometry,m=N.length>65e3,q=m?Oe.BIG:Oe.NONE;Mt.startPointsVector(e,N.length);for(let Et=0;Et<N.length;Et++){const[Ot,Ft,ht]=N[N.length-1-Et];Te.createFloatVector(e,Ot,Ft,ht)}const it=e.endVector(),It=[],nt=[],Dt=[],gt=[];for(const[,Et]of l){if(m){const ht=fe.createIndicesVector(e,Et),bt=fe.createBigShellProfile(e,ht);Dt.push(bt);continue}const Ot=Ne.createIndicesVector(e,Et),Ft=Ne.createShellProfile(e,Ot);It.push(Ft)}const vt=Mt.createBigProfilesVector(e,Dt),Ht=Mt.createProfilesVector(e,It);for(const[Et,Ot]of _){if(m){for(const Ft of Ot){const ht=be.createIndicesVector(e,Ft),bt=be.createBigShellHole(e,ht,Et);gt.push(bt)}continue}for(const Ft of Ot){const ht=de.createIndicesVector(e,Ft),bt=de.createShellHole(e,ht,Et);nt.push(bt)}}const zt=Mt.createBigHolesVector(e,gt),Pt=Mt.createHolesVector(e,nt),Nt=Mt.createShell(e,Ht,Pt,it,vt,zt,q);w.push(Nt)}const B=D.createShellsVector(e,w),H=[];for(let h=0;h<r.length;h++){const u=r[h];if(u.geometry.type!==yt.CIRCLE_EXTRUSION)continue;const N=[],{radius:l,indicesArray:_,typesArray:x,segments:m,circleCurveData:q}=u.geometry;Tt.startCircleCurvesVector(e,q.length);for(let Nt=0;Nt<q.length;Nt++){const[Et,Ot,Ft,ht,bt,Ie,Ye,we,xe,Be,ve]=q[Nt];nr.createCircleCurve(e,bt/360*2*Math.PI,Et,Ot,Ft,ht,xe,Be,ve,Ie,Ye,we)}const it=e.endVector();Tt.startWiresVector(e,m.length);for(let Nt=0;Nt<m.length;Nt++){const[Et,Ot,Ft,ht,bt,Ie]=m[Nt];Er.createWire(e,Et,Ot,Ft,ht,bt,Ie)}const It=e.endVector(),nt=Tt.createOrderVector(e,_),Dt=Tt.createPartsVector(e,x);Tt.startWireSetsVector(e,0);const gt=e.endVector();Tt.startAxis(e),Tt.addCircleCurves(e,it),Tt.addOrder(e,nt),Tt.addWires(e,It),Tt.addWireSets(e,gt),Tt.addParts(e,Dt);const vt=Tt.endAxis(e);N.push(vt);const Ht=Ut.createAxesVector(e,N),zt=Ut.createRadiusVector(e,[l]);Ut.startCircleExtrusion(e),Ut.addAxes(e,Ht),Ut.addRadius(e,zt);const Pt=Ut.endCircleExtrusion(e);H.push(Pt)}const g=D.createCircleExtrusionsVector(e,H);D.startRepresentationsVector(e,r.length);const P=new Map;for(let h=0;h<r.length;h++){const u=r.length-1-h,l=r[u].geometry.type;let _=P.get(l);_===void 0&&(_=-1),P.set(l,_+1)}const M=new K,L=new K;for(let h=0;h<r.length;h++){const u=r.length-1-h,N=r[u],{bbox:l}=N.geometry;F.set(N.id,u);const _=N.geometry.type,x=P.get(_);if(x===void 0)throw new Error("Fragments: Malformed geometry definition");P.set(_,x-1),M.set(l.min.x,l.min.y,l.min.z),L.set(l.max.x,l.max.y,l.max.z),M.distanceTo(L)>999999&&(console.log(`Infinity bounding box: ${N.id}`),l.min.x=0,l.min.y=0,l.min.z=0,l.max.x=.1,l.max.y=.1,l.max.z=.1),Me.createRepresentation(e,x,l.min.x,l.min.y,l.min.z,l.max.x,l.max.y,l.max.z,N.geometry.type)}const z=e.endVector();let Q=0;for(const h of I)for(const u of h.element.geometries){const N=u.color.toString();if(!T.has(N)){const l=u.color.map(_=>_*255);T.set(N,{id:Q++,color:l})}}D.startMaterialsVector(e,T.size);const b=Array.from(T.keys());for(let h=0;h<b.length;h++){const u=b[b.length-1-h],{color:N}=T.get(u),[l,_,x,m]=N;Ue.createMaterial(e,l,_,x,m,Cr.ONE,0)}const p=e.endVector();let W=0;for(const h of I)W+=h.element.geometries.length;D.startSamplesVector(e,W);for(let h=0;h<I.length;h++){const u=I[I.length-1-h],N=c.get(u.element.id),l=u.element.geometries;for(let _=0;_<l.length;_++){const x=l[l.length-_-1],m=F.get(x.id),q=T.get(x.color.toString()).id,it=x.localTransformID||0;De.createSample(e,N,q,m,it)}}const J=e.endVector();D.startLocalTransformsVector(e,a.length);for(let h=0;h<a.length;h++){const u=a[a.length-1-h],[N,l,_,x,m,q,it,It,nt]=u.data;ut.createTransform(e,N,l,_,x,m,q,it,It,nt)}const G=e.endVector(),$=D.createMeshesItemsVector(e,A),Ct=ut.createTransform(e,o.px,o.py,o.pz,o.dxx,o.dxy,o.dxz,o.dyx,o.dyy,o.dyz);D.startMeshes(e),D.addCoordinates(e,Ct),D.addGlobalTransforms(e,S),D.addShells(e,B),D.addRepresentations(e,z),D.addSamples(e,J),D.addLocalTransforms(e,G),D.addMaterials(e,p),D.addCircleExtrusions(e,g),D.addMeshesItems(e,$);const Z=D.endMeshes(e),ot=[],ct=new Map,ft=new Map,tt=new Map;let et=0;for(let h=0;h<n.length;h++){const u=h,N=n[u],l=[];ct.set(u,l);const _=[];ft.set(u,_);const x=[];tt.set(u,x);for(let m=0;m<N.absolute.length;m++){const q=N.absolute[N.absolute.length-1-m],{points:it}=q,It=k.createPointsVector(e,it);k.startGeometryLines(e),k.addPoints(e,It);const nt=k.endGeometryLines(e);ot.push(nt),l.push(et++)}for(let m=0;m<N.horizontal.length;m++){const q=N.horizontal[N.horizontal.length-1-m],{points:it}=q,It=k.createPointsVector(e,it);k.startGeometryLines(e),k.addPoints(e,It);const nt=k.endGeometryLines(e);ot.push(nt),_.push(et++)}for(let m=0;m<N.vertical.length;m++){const q=N.vertical[N.vertical.length-1-m],{points:it}=q,It=k.createPointsVector(e,it);k.startGeometryLines(e),k.addPoints(e,It);const nt=k.endGeometryLines(e);ot.push(nt),x.push(et++)}}const lt=U.createLinesVector(e,ot);let j=et;U.startRepresentationsVector(e,j);const V=[];j--;for(let h=0;h<n.length;h++){const u=n.length-1-h,N=n[u];for(let l=0;l<N.absolute.length;l++){const _=N.absolute[N.absolute.length-1-l],{type:x}=_;V.unshift(s++);const m=j--;ee.createGeometryRepresentation(e,m,x)}for(let l=0;l<N.horizontal.length;l++){const _=N.horizontal[N.horizontal.length-1-l],{type:x}=_;V.unshift(s++);const m=j--;ee.createGeometryRepresentation(e,m,x)}for(let l=0;l<N.vertical.length;l++){const _=N.vertical[N.vertical.length-1-l],{type:x}=_;V.unshift(s++);const m=j--;ee.createGeometryRepresentation(e,m,x)}}const At=e.endVector();let rt=et;const X=[];U.startSamplesVector(e,rt),rt--;for(let h=0;h<n.length;h++){const u=n.length-1-h,N=n[u];for(let l=0;l<N.absolute.length;l++){const _=rt--;X.unshift(s++),se.createGeometrySample(e,_,0)}for(let l=0;l<N.horizontal.length;l++){const _=rt--;X.unshift(s++),se.createGeometrySample(e,_,0)}for(let l=0;l<N.vertical.length;l++){const _=rt--;X.unshift(s++),se.createGeometrySample(e,_,0)}}const pt=e.endVector();U.startTransformsVector(e,1),ut.createTransform(e,0,0,0,1,0,0,0,1,0);const qt=e.endVector(),kt=[s++];U.startWallsVector(e,0);const wt=e.endVector();U.startRepresentationsSamplesVector(e,0);const xt=e.endVector(),Bt=U.createRepresentationIdsVector(e,V),_t=U.createSampleIdsVector(e,X),oe=U.createRepresentationsSamplesVector(e,kt);U.startGeometries(e),U.addSamples(e,pt),U.addSampleIds(e,_t),U.addRepresentations(e,At),U.addRepresentationIds(e,Bt),U.addTransforms(e,qt),U.addTransformIds(e,oe),U.addRepresentationsSamples(e,xt),U.addLines(e,lt),U.addWalls(e,wt);const re=U.endGeometries(e),Kt=[];for(let h=0;h<n.length;h++){const u=ct.get(h),N=ft.get(h),l=tt.get(h);if(u===void 0||N===void 0||l===void 0)throw new Error("Fragments: Malformed alignment definition");const _=at.createAbsoluteVector(e,u),x=at.createHorizontalVector(e,N),m=at.createVerticalVector(e,l),q=at.createAlignment(e,_,x,m);Kt.push(q)}const st=y.createAlignmentsVector(e,Kt);return{modelMesh:Z,localIDs:i,maxLocalID:s,modelGeometries:re,modelAlignments:st}}}const Zt={base:new Set([ce,he,le,Ce]),materials:new Set([Go,Yo,wo,xo,Bo,vo,Ho,zo,Wo,Xo]),properties:new Set([uo,_o,Po,mo,Uo,Mo,Do,go,Vo,yo]),elements:new Set([ce,he,le,Ce,Ke,Qe,Je,Ze,ts,es,ss,is,os,rs,Is,ns,Es,as,Cs,cs,Ts,Rs,Fs,hs,ls,As,Os,fs,Ns,bs,ds,Ss,Ls,ps,us,_s,Ps,ms,Us,Pe,Ms,Ds,gs,Vs,ys,Gs,Ys,ws,xs,Bs,vs,Hs,zs,Ws,Xs,js,$s,qs,ks,Ks,Qs,Js,Zs,ti,ei,si,ii,oi,ri,Ii,ni,Ei,ai,Ci,ci,Ti,Ri,Fi,hi,li,Ai,Oi,fi,Ni,bi,di,Si,Li,pi,ui,_i,Pi,mi,Ui,Mi,Di,gi,Vi,yi,Gi,Yi,wi,xi,Bi,vi,Hi,zi,Wi,Xi,ji,$i,qi,ki,Ki,Qi,Ji,Zi,to,eo,so,io,oo,ro,Io,no,Eo,ao,Co,co,To,Ro,Fo,ho,lo,Ao,Oo,fo,No,_e,ue,bo,So,Lo,po])};class pr{constructor(){E(this,"_builder",null);E(this,"wasm",{path:"/node_modules/web-ifc/",absolute:!1});E(this,"attributesToExclude",new Set(["Representation","ObjectPlacement","CompositionType","OwnerHistory"]));E(this,"relations",new Map([[jo,{forRelating:"DefinesOcurrence",forRelated:"IsDefinedBy"}],[$o,{forRelated:"HasAssociations",forRelating:"AssociatedTo"}],[qo,{forRelated:"Decomposes",forRelating:"IsDecomposedBy"}],[ko,{forRelated:"ContainedInStructure",forRelating:"ContainsElements"}]]));E(this,"classes",{elements:new Le([...Zt.elements]),abstract:new Le([...Zt.base,...Zt.materials,...Zt.properties])});E(this,"includeUniqueAttributes",!1);E(this,"includeRelationNames",!1);E(this,"replaceStoreyElevation",!0)}get builder(){if(!this._builder)throw new Error("Fragments: Builder not initialized");return this._builder}async process(t){var p;this._builder=new Re(1024);const e=new Lr(this);e.wasm=this.wasm;const s={...t,builder:this.builder},i=await e.process(s),{modelMesh:o,maxLocalID:r,localIDs:n,modelGeometries:I,modelAlignments:a}=i,c=new Tr(this,this.builder);c.wasm=this.wasm;const F={...t,geometryProcessedLocalIDs:n},T=await c.process(F),{relIndicesVector:C,relsVector:A,guidsVector:d,guidsItemsVector:R,metadataOffset:O,localIdsVector:S,spatialStrutureOffset:w,attributesVector:B,categoriesVector:H,uniqueAttributesVector:g,relNamesVector:P}=T,M=t.id??Ko.generateUUID(),L=this.builder.createString(M);y.startModel(this.builder),y.addMeshes(this.builder,o),y.addMetadata(this.builder,O),y.addAttributes(this.builder,B),y.addUniqueAttributes(this.builder,g),y.addRelationNames(this.builder,P),y.addLocalIds(this.builder,S),y.addCategories(this.builder,H),y.addRelationsItems(this.builder,C),y.addRelations(this.builder,A),y.addGuidsItems(this.builder,R),y.addGuids(this.builder,d),y.addSpatialStructure(this.builder,w),y.addGuid(this.builder,L),y.addMaxLocalId(this.builder,r),y.addGeometries(this.builder,I),y.addAlignments(this.builder,a);const z=y.endModel(this.builder);this.builder.finish(z);const Q=this.builder.asUint8Array();this.clean();const b=t.raw?Q:Qo.deflate(Q);return(p=t.progressCallback)==null||p.call(t,1,{process:"conversion",state:"finish"}),b}clean(){var t;(t=this._builder)==null||t.clear(),this._builder=null}}const Gt=new Jo,ur=Gt.get(Zo),Rt=ur.create();Rt.scene=new tr(Gt);Rt.scene.setup();Rt.scene.three.background=null;const _r=document.getElementById("container");Rt.renderer=new er(Gt,_r);Rt.camera=new sr(Gt);Rt.camera.controls.setLookAt(74,16,.2,30,-4,27);Gt.init();const Pr=Gt.get(ir);Pr.create(Rt);const Ve=new pr;Ve.wasm={absolute:!0,path:"https://unpkg.com/web-ifc@0.0.69/"};let Vt=null,ye=()=>{};const mr=async()=>{const e=await(await fetch("/resources/ifc/school_str.ifc")).arrayBuffer(),s=new Uint8Array(e);Vt=await Ve.process({bytes:s,progressCallback:(i,o)=>console.log(i,o)}),ye()},Ur="../../FragmentsModels/src/multithreading/fragments-thread.ts",$t=new ar(Ur);Rt.camera.controls.addEventListener("rest",()=>$t.update(!0));const Mr=async()=>{if(!Vt)return;const f=await $t.load(Vt,{modelId:"example"});f.useCamera(Rt.camera.three),Rt.scene.three.add(f.object),await $t.update(!0)},Dr=async()=>{await $t.disposeModel("example")};or.init();const[ie,Ge]=me.create(f=>{const t=()=>{if(!Vt)return;const s=new File([Vt],"sample.frag"),i=document.createElement("a");i.href=URL.createObjectURL(s),i.download=s.name,i.click(),URL.revokeObjectURL(i.href)};let e=te`
      <bim-label style="white-space: normal;">💡 Open the console to see more information</bim-label>
      <bim-button label="Load IFC" @click=${mr}></bim-button>
    `;return Vt&&(e=te`
        <bim-label style="white-space: normal;">🚀 The IFC has been converted to Fragments binary data. Add the model to the scene!</bim-label>
        <bim-button label="Add Model" @click=${Mr}></bim-button>
        <bim-button label="Remove Model" @click=${Dr}></bim-button>
        <bim-button label="Download Fragments" @click=${t}></bim-button>
      `),te`
    <bim-panel id="controls-panel" active label="IFC Importer" class="options-menu">
      <bim-panel-section label="Controls">
        ${e}
      </bim-panel-section>
    </bim-panel>
  `},{});ye=()=>Ge();$t.models.list.onItemDeleted.add(()=>Ge());document.body.append(ie);const gr=me.create(()=>te`
    <bim-button class="phone-menu-toggler" icon="solar:settings-bold"
      @click=${()=>{ie.classList.contains("options-menu-visible")?ie.classList.remove("options-menu-visible"):ie.classList.add("options-menu-visible")}}>
    </bim-button>
  `);document.body.append(gr);const Yt=new rr;Yt.showPanel(2);document.body.append(Yt.dom);Yt.dom.style.left="0px";Yt.dom.style.zIndex="unset";Rt.renderer.onBeforeUpdate.add(()=>Yt.begin());Rt.renderer.onAfterUpdate.add(()=>Yt.end());
