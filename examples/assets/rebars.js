import{C as we,W as ve,cu as Me,a as Ce,cv as Ie,cw as ze,cx as Le,cD as Ee,I as Oe,cI as J,cB as $e,cL as me,cF as ie,cG as Pe,cH as De,V as b,n as x,j as X,cM as oe,O as Se}from"./virtual-memory-controller-ZSRKHGNY.js";import{a as Te,R as pe,m as de}from"./index-CWj6LyOo.js";import{F as We}from"./index-CqDgYQyW.js";import{G as Be}from"./index-BzdGIFlS.js";const Ue=document.getElementById("container"),G=new we,ke=G.get(ve),h=ke.create();h.scene=new Me(G);h.renderer=new Ce(G,Ue);h.camera=new Ie(G);G.init();h.camera.controls.setLookAt(12,6,8,0,0,-10);h.renderer.three.shadowMap.enabled=!0;h.renderer.three.shadowMap.type=ze;h.scene.setup({shadows:{cascade:1,resolution:1024}});await h.scene.updateShadows();h.camera.controls.addEventListener("rest",async()=>{await h.scene.updateShadows()});const He=new Le;h.scene.three.add(He);const Fe="../../src/multithreading/fragments-thread.ts",w=new We(Fe);h.camera.controls.addEventListener("control",()=>w.update());w.models.list.onItemSet.add(({value:i})=>{i.tiles.onItemSet.add(({value:t})=>{"isMesh"in t&&t.material[0].opacity===1&&(t.castShadow=!0,t.receiveShadow=!0)});for(const t of i.object.children)t.castShadow=!0,t.receiveShadow=!0});const _e=Ee.newModel({raw:!0}),O=await w.load(_e,{modelId:"example",camera:h.camera.three,raw:!0});h.scene.three.add(O.object);await w.update(!0);const se=new Oe;se.SetWasmPath("/node_modules/web-ifc/",!1);await se.Init();const ce=new Be(se),e={footingWidth:1,footingLength:1,footingHeight:.4,columnHeight:1,columnWidth:.3,columnLength:.3,columnPadding:.05,bottomPadding:.05,columnLongRebarRadius:.01,columnTransRebarRadius:.01,columnTransRebarOffset:.15,transOverlap:.1,topColumnRebarOffset:.3,footingRebarRadius:.01,footingRebarOffset:.15,footingOverlap:.1,footingBendRadius:.05},f={clrx1:0,clrx2:0,cBottom:0,clrz1:0,clrz2:0,cTop:0},T=[],Z={red:"red",blue:"blue",green:"green"},B=[],N=new J({color:"gray",transparent:!0,opacity:1,side:$e}),le=new me(new ie,N);h.scene.three.add(le);le.frustumCulled=!1;const ee=new me(new ie,N);h.scene.three.add(ee);ee.frustumCulled=!1;const te=new ie,Ve=new Pe({color:16711680,depthTest:!1}),be=new De(te,Ve);be.frustumCulled=!1;h.scene.three.add(be);te.computeBoundingSphere();let ae=null,re=!1;const q=(i,t,s,o,r,y,a)=>({radius:[i],axes:[{wires:[[t,s,o,r,y,a]],order:[0],parts:[x.WIRE],wireSets:[],circleCurves:[]}]}),Ze=(i,t)=>{const s=f.clrx1,o=f.clrz1,r=f.clrx2,y=f.clrz2,a=t,u=e.columnLongRebarRadius,R=e.columnTransRebarRadius,n=u+R,v=s,M=o+n,z=r,L=o+n,U=r-n,$=o,E=r-n,H=y,F=r,W=y-n,C=s,l=y-n,m=s+n,c=y,p=s+n,P=o,g=s+n,ne=o,ge=s+n,fe=o-e.transOverlap,xe=s,he=o+n,ye=s-e.transOverlap,Re=o+n,k=new X().makeRotationZ(Math.PI/2),I=new X().makeRotationY(-Math.PI/2),Y=new b(1,0,0),Q=new b(0,1,0);Y.applyMatrix4(k),Q.applyMatrix4(k);const j=new b(1,0,0),A=new b(0,1,0);j.applyMatrix4(k),A.applyMatrix4(k),j.applyMatrix4(I),A.applyMatrix4(I);const _=new b(1,0,0),V=new b(0,1,0);_.applyMatrix4(k),V.applyMatrix4(k),_.applyMatrix4(I),_.applyMatrix4(I),V.applyMatrix4(I),V.applyMatrix4(I);const D=new b(1,0,0),S=new b(0,1,0);return D.applyMatrix4(k),S.applyMatrix4(k),D.applyMatrix4(I),D.applyMatrix4(I),D.applyMatrix4(I),S.applyMatrix4(I),S.applyMatrix4(I),S.applyMatrix4(I),{radius:[i],axes:[{wires:[[g,a,ne,ge,a,fe],[v,a,M,z,a,L],[U,a,$,E,a,H],[F,a,W,C,a,l],[m,a,c,p,a-R*2,P],[xe,a-R*2,he,ye,a-R*2,Re]],order:[0,0,1,1,2,2,3,3,4,4,5],parts:[x.WIRE,x.CIRCLE_CURVE,x.WIRE,x.CIRCLE_CURVE,x.WIRE,x.CIRCLE_CURVE,x.WIRE,x.CIRCLE_CURVE,x.WIRE,x.CIRCLE_CURVE,x.WIRE],wireSets:[],circleCurves:[{aperture:Math.PI/2,position:[s,a,o],radius:n,xDirection:[D.x,D.y,D.z],yDirection:[S.x,S.y,S.z]},{aperture:Math.PI/2,position:[r,a,o],radius:n,xDirection:[Y.x,Y.y,Y.z],yDirection:[Q.x,Q.y,Q.z]},{aperture:Math.PI/2,position:[r,a,y],radius:n,xDirection:[j.x,j.y,j.z],yDirection:[A.x,A.y,A.z]},{aperture:Math.PI/2,position:[s,a,y],radius:n,xDirection:[_.x,_.y,_.z],yDirection:[V.x,V.y,V.z]},{aperture:Math.PI/2,position:[s,a-R*2,o],radius:n,xDirection:[D.x,D.y,D.z],yDirection:[S.x,S.y,S.z]}]}]}},ue=(i,t,s,o,r,y,a)=>{const u=e.footingBendRadius,R=e.footingOverlap,n=new b(t,s,o),v=new b(r,y,a),M=v.clone().sub(n.clone()).normalize(),z=new b(0,1,0),L=n.clone().add(z.clone().multiplyScalar(R)),U=n.clone().add(z.clone().multiplyScalar(u)),$=n.clone().add(M.clone().multiplyScalar(u)),E=v.clone().sub(M.clone().multiplyScalar(u)),H=v.clone().add(z.clone().multiplyScalar(u)),F=v.clone().add(z.clone().multiplyScalar(R)),W=n.clone();W.y+=u,W.add(M.clone().multiplyScalar(u));const C=v.clone();C.y+=u,C.sub(M.clone().multiplyScalar(u));let l=new b(1,0,0);const m=new b(0,1,0);let c=new b(1,0,0);const p=new b(0,1,0),P=M.x===0&&M.y===0&&M.z===1;if(P||(l=new b(0,0,1),c=new b(0,0,1)),P){const g=new X().makeRotationX(Math.PI/2);l.applyMatrix4(g),l.applyMatrix4(g),m.applyMatrix4(g),m.applyMatrix4(g),c.applyMatrix4(g),p.applyMatrix4(g)}else{const g=new X().makeRotationZ(Math.PI/2);l.applyMatrix4(g),m.applyMatrix4(g),c.applyMatrix4(g),p.applyMatrix4(g),c.applyMatrix4(g),p.applyMatrix4(g)}return{radius:[i],axes:[{wires:[[L.x,L.y,L.z,U.x,U.y,U.z],[$.x,$.y,$.z,E.x,E.y,E.z],[H.x,H.y,H.z,F.x,F.y,F.z]],order:[0,0,1,1,2],parts:[x.WIRE,x.CIRCLE_CURVE,x.WIRE,x.CIRCLE_CURVE,x.WIRE],wireSets:[],circleCurves:[{aperture:Math.PI/2,position:[W.x,W.y,W.z],radius:u,xDirection:[l.x,l.y,l.z],yDirection:[m.x,m.y,m.z]},{aperture:Math.PI/2,position:[C.x,C.y,C.z],radius:u,xDirection:[c.x,c.y,c.z],yDirection:[p.x,p.y,p.z]}]}]}},je=async()=>{ae&&clearTimeout(ae),ae=setTimeout(async()=>{if(re)return;re=!0;const i=[];await w.editor.reset(O.modelId),w.settings.graphicsQuality=1;const t=w.editor.createMaterial(O.modelId,new J({color:new oe(1,0,0)}));Z.red=t;const s=w.editor.createMaterial(O.modelId,new J({color:new oe(0,0,1)}));Z.blue=s;const o=w.editor.createMaterial(O.modelId,new J({color:new oe(0,1,0)}));Z.green=o;const r=w.editor.createLocalTransform(O.modelId,new X().identity());let y=0;for(const a of T){const u=B[y];let R=null;if(u===0?R=Z.red:u===1?R=Z.blue:u===2&&(R=Z.green),!R)throw new Error("Color not found");y++;const n=w.editor.createCircleExtrusion(O.modelId,a),v=new Se;i.push({attributes:{_category:{value:"test"}},globalTransform:v.matrix.clone(),samples:[{localTransform:r,representation:n,material:R}]})}await w.editor.createElements(O.modelId,i),await w.update(!0),re=!1},500)},d=async()=>{T.length=0,B.length=0,await w.editor.reset(O.modelId);const i=e.footingWidth,t=e.footingLength,s=e.footingHeight,o=e.columnWidth,r=e.columnLength,y=e.columnHeight,a=[];ce.getExtrusion(le.geometry,{profilePoints:[0,0,0,i,0,0,i,0,t,0,0,t],direction:[0,1,0],length:s}),ce.getExtrusion(ee.geometry,{profilePoints:[0,0,0,o,0,0,o,0,r,0,0,r],direction:[0,1,0],length:y});const u=i/2-o/2;f.cBottom=s;const R=t/2-r/2;ee.position.set(u,f.cBottom,R),f.cTop=f.cBottom+y,f.clrx1=i/2+o/2-e.columnPadding,f.clrz1=t/2+r/2-e.columnPadding,f.clrx2=i/2-o/2+e.columnPadding,f.clrz2=t/2-r/2+e.columnPadding;const n=f.clrx1,v=f.clrz1,M=f.clrx2,z=f.clrz2,L=e.bottomPadding,U=f.cTop,$=U+e.topColumnRebarOffset,E=e.columnLongRebarRadius;T.push(q(E,n,L,v,n,$,v)),T.push(q(E,M,L,z,M,$,z)),T.push(q(E,n,L,z,n,$,z)),T.push(q(E,M,L,v,M,$,v)),B.push(0),B.push(0),B.push(0),B.push(0);const H=Math.floor(U/e.columnTransRebarOffset);for(let l=1;l<H;l++){const m=L+e.columnTransRebarOffset*l;T.push(Ze(E,m)),B.push(1)}const F=Math.ceil(i/e.footingRebarOffset),W=Math.ceil(t/e.footingRebarOffset),C=e.footingRebarRadius;for(let l=1;l<F;l++){const m=e.footingRebarOffset*l,c=e.bottomPadding,p=0+e.bottomPadding,P=t-e.bottomPadding;T.push(ue(C,m,c,p,m,c,P)),B.push(2)}for(let l=1;l<W;l++){const m=e.footingRebarOffset*l,c=e.bottomPadding,p=0+e.bottomPadding,P=i-e.bottomPadding;T.push(ue(C,p,c+C,m,P,c+C,m)),B.push(2)}for(const l of T)for(const m of l.axes)for(const c of m.wires)for(let p=0;p<c.length-2;p+=3){const P=c[p],g=c[p+1],ne=c[p+2];a.push(new b(P,g,ne))}te.deleteAttribute("position"),te.setFromPoints(a),await je()};await d();const Ae=async()=>{await w.editor.save(O.modelId),console.log("saved"),window.setTimeout(async()=>{const i=await O.getBuffer(),t=new Uint8Array(i),s=new Blob([t]),o=URL.createObjectURL(s),r=document.createElement("a");r.href=o,r.download="exported.frag",document.body.appendChild(r),r.click(),document.body.removeChild(r),URL.revokeObjectURL(o)},1e3)};Te.init();const[K]=pe.create(i=>de`
    <bim-panel style="min-width: 25rem;" id="controls-panel" active label="Element Editor" class="options-menu">

      <bim-panel-section label="Controls">

      <bim-number-input label="Opacity" slider min=0 max=1 step=0.1 value=${N.opacity} @change=${t=>{N.opacity=t.target.value,d()}}></bim-number-input>

      <bim-number-input label="Length" slider min=0.5 max=3 step=0.1 value=${e.footingLength} @change=${t=>{e.footingLength=t.target.value,d()}}></bim-number-input>

      <bim-number-input label="Width" slider min=0.5 max=3 step=0.1 value=${e.footingWidth} @change=${t=>{e.footingWidth=t.target.value,d()}}></bim-number-input>

      <bim-number-input label="Height" slider min=0.3 max=1 step=0.1 value=${e.footingHeight} @change=${t=>{e.footingHeight=t.target.value,d()}}></bim-number-input>

      <bim-number-input label="Column Width" slider min=0.05 max=0.5 step=0.01 value=${e.columnWidth} @change=${t=>{e.columnWidth=t.target.value,d()}}></bim-number-input>
      
      <bim-number-input label="Column Length" slider min=0.05 max=0.5 step=0.01 value=${e.columnLength} @change=${t=>{e.columnLength=t.target.value,d()}}></bim-number-input>

      <bim-number-input label="Column Height" slider min=0.3 max=1 step=0.1 value=${e.columnHeight} @change=${t=>{e.columnHeight=t.target.value,d()}}></bim-number-input>

      <bim-number-input label="Column Padding" slider min=0.05 max=0.3 step=0.01 value=${e.columnPadding} @change=${t=>{e.columnPadding=t.target.value,d()}}></bim-number-input>

      <bim-number-input label="Column Long Rebar Radius" slider min=0.005 max=0.015 step=0.001 value=${e.columnLongRebarRadius} @change=${t=>{e.columnLongRebarRadius=t.target.value,d()}}></bim-number-input>

      <bim-number-input label="Column Trans Rebar Radius" slider min=0.005 max=0.015 step=0.001 value=${e.columnTransRebarRadius} @change=${t=>{e.columnTransRebarRadius=t.target.value,d()}}></bim-number-input>

      <bim-number-input label="Column Trans Rebar Offset" slider min=0.05 max=0.3 step=0.01 value=${e.columnTransRebarOffset} @change=${t=>{e.columnTransRebarOffset=t.target.value,d()}}></bim-number-input>

      <bim-number-input label="Column Trans Overlap" slider min=0.05 max=0.3 step=0.01 value=${e.transOverlap} @change=${t=>{e.transOverlap=t.target.value,d()}}></bim-number-input>

      <bim-number-input label="Column Top Rebar Offset" slider min=0.05 max=0.3 step=0.01 value=${e.topColumnRebarOffset} @change=${t=>{e.topColumnRebarOffset=t.target.value,d()}}></bim-number-input>

      <bim-number-input label="Footing Rebar Radius" slider min=0.005 max=0.015 step=0.001 value=${e.footingRebarRadius} @change=${t=>{e.footingRebarRadius=t.target.value,d()}}></bim-number-input>

      <bim-number-input label="Footing Rebar Offset" slider min=0.05 max=0.3 step=0.01 value=${e.footingRebarOffset} @change=${t=>{e.footingRebarOffset=t.target.value,d()}}></bim-number-input>

      <bim-number-input label="Footing Overlap" slider min=0.05 max=0.3 step=0.01 value=${e.footingOverlap} @change=${t=>{e.footingOverlap=t.target.value,d()}}></bim-number-input>

      <bim-number-input label="Footing Bend Radius" slider min=0.005 max=0.015 step=0.001 value=${e.footingBendRadius} @change=${t=>{e.footingBendRadius=t.target.value,d()}}></bim-number-input>

      <bim-button icon="material-symbols:save" label="Save" @click=${Ae}></bim-button>

      </bim-panel-section>

    </bim-panel>
  `,{});document.body.append(K);const Xe=pe.create(()=>de`
    <bim-button class="phone-menu-toggler" icon="solar:settings-bold"
      @click=${()=>{K.classList.contains("options-menu-visible")?K.classList.remove("options-menu-visible"):K.classList.add("options-menu-visible")}}>
    </bim-button>
  `);document.body.append(Xe);
